[{"path":[]},{"path":"https://frbcesab.github.io/funbiogeo/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://frbcesab.github.io/funbiogeo/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://frbcesab.github.io/funbiogeo/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/ code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https:// www.contributor-covenant.org/translations.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to funbiogeo","title":"Contributing to funbiogeo","text":"First , thanks taking time contribute funbiogeo! types contributions encouraged valued. See Table contents different ways help details project handles . Please make sure read relevant section making contribution. make lot easier us maintainers smooth experience involved.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/CONTRIBUTING.html","id":"table-of-contents","dir":"","previous_headings":"","what":"Table of contents","title":"Contributing to funbiogeo","text":"Code conduct Style guide Commit messages Asking questions Reporting bugs Requesting features Contributing code","code":""},{"path":"https://frbcesab.github.io/funbiogeo/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of conduct","title":"Contributing to funbiogeo","text":"project released Contributor Code Conduct. participating, expected uphold code. Please report unacceptable behavior nicolas.casajus@fondationbiodiversite.fr.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/CONTRIBUTING.html","id":"style-guide","dir":"","previous_headings":"","what":"Style guide","title":"Contributing to funbiogeo","text":"use Tidyverse style guide writing R code. functions must start fb_. Functions documented roxygen2 syntax. funbiogeo uses lower_snake_case.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/CONTRIBUTING.html","id":"commit-messages","dir":"","previous_headings":"","what":"Commit messages","title":"Contributing to funbiogeo","text":"want contribute commiting changes, please try use Conventional commits specification.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/CONTRIBUTING.html","id":"asking-questions","dir":"","previous_headings":"","what":"Asking questions","title":"Contributing to funbiogeo","text":"ask question, best search existing Issues might help . case found suitable issue still need clarification, can write question issue. still feel need ask question need clarification, recommend following: Open new Issue. Use template other_issue.md. Provide much context can ’re running . Provide project platform versions (paste output sessionInfo()). take care issue soon possible.","code":""},{"path":[]},{"path":"https://frbcesab.github.io/funbiogeo/CONTRIBUTING.html","id":"before-submitting-a-bug-report","dir":"","previous_headings":"Reporting bugs","what":"Before submitting a bug report","title":"Contributing to funbiogeo","text":"good bug report shouldn’t leave others needing chase information. Therefore, ask investigate carefully, collect information describe issue detail report. Please complete following steps advance help us fix potential bug fast possible. Make sure using latest version funbiogeo. Determine bug really bug error side. see users experienced (potentially already solved) issue , check already bug report existing bug error bug tracker.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/CONTRIBUTING.html","id":"how-do-i-submit-a-bug-report","dir":"","previous_headings":"Reporting bugs","what":"How do I submit a bug report?","title":"Contributing to funbiogeo","text":"use GitHub Issues track bugs errors. run issue project: Open new Issue. Use template bug_report.md. Explain behavior expect actual behavior. Please provide much context possible describe reproduction steps someone else can follow recreate issue . usually includes code reproducible example. take care issue soon possible.","code":""},{"path":[]},{"path":"https://frbcesab.github.io/funbiogeo/CONTRIBUTING.html","id":"before-requesting-a-feature","dir":"","previous_headings":"Requesting features","what":"Before requesting a feature","title":"Contributing to funbiogeo","text":"Make sure using latest version funbiogeo. Read documentation carefully find functionality already covered. Perform search see enhancement already suggested. , add comment existing issue instead opening new one.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/CONTRIBUTING.html","id":"how-do-i-submit-a-feature-request","dir":"","previous_headings":"Requesting features","what":"How do I submit a feature request?","title":"Contributing to funbiogeo","text":"Feature requests tracked GitHub Issues. Open new Issue. Use template feature_request.md. Provide clear descriptive title issue identify suggestion. Provide step--step description suggested enhancement many details possible. Explain enhancement useful funbiogeo users. take care issue soon possible.","code":""},{"path":[]},{"path":"https://frbcesab.github.io/funbiogeo/CONTRIBUTING.html","id":"general-workflow","dir":"","previous_headings":"Contributing code","what":"General workflow","title":"Contributing to funbiogeo","text":"use GitHub flow collaborate project: Fork repository using GitHub interface. Clone fork using git clone fork-url (replace fork-url URL fork). Alternatively, open RStudio IDE create New Project Version Control. Create new branch w/ git checkout -b branch-name (replace branch-name name new branch). Make contribution (see examples). Stage (git add) commit (git commit) changes often necessary Push changes GitHub w/ git push origin branch-name. Submit Pull Request original repo. review PR soon possible.","code":""},{"path":[]},{"path":"https://frbcesab.github.io/funbiogeo/CONTRIBUTING.html","id":"editing-the-readme","dir":"","previous_headings":"Contributing code > Improve documentation","what":"Editing the README","title":"Contributing to funbiogeo","text":"want contribute improving README, please edit README.Rmd (README.md). forget update README.md running:","code":"rmarkdown::render(\"README.Rmd\")"},{"path":"https://frbcesab.github.io/funbiogeo/CONTRIBUTING.html","id":"editing-vignettes","dir":"","previous_headings":"Contributing code > Improve documentation","what":"Editing vignettes","title":"Contributing to funbiogeo","text":"want contribute editing existing vignette, just edit corresponding Rmd file stored vignettes/ folder. want contribute adding new vignette, create new Rmd file vignettes/ folder add following header: use new external dependency, forget add DESCRIPTION file section Suggests (package already listed section Imports). Check integrity package :","code":"--- title: \"Vignette Title\" output: rmarkdown::html_vignette vignette: >   %\\VignetteIndexEntry{Vignette Title}   %\\VignetteEngine{knitr::rmarkdown}   %\\VignetteEncoding{UTF-8} --- devtools::check()"},{"path":"https://frbcesab.github.io/funbiogeo/CONTRIBUTING.html","id":"editing-function-documentation","dir":"","previous_headings":"Contributing code > Improve documentation","what":"Editing function documentation","title":"Contributing to funbiogeo","text":"want contribute improving documentation function, open corresponding file R/ folder edit lines starting #' (roxygen2 syntax). Update documentation (Rd files man/ folder) running: use new external dependency example section, forget add DESCRIPTION file section Imports (package already listed). Check integrity package :","code":"devtools::document() devtools::check()"},{"path":"https://frbcesab.github.io/funbiogeo/CONTRIBUTING.html","id":"fix-bug","dir":"","previous_headings":"Contributing code","what":"Fix bug","title":"Contributing to funbiogeo","text":"want contribute improving code function, open edit corresponding file R/ folder. Check integrity package : forget adapt unit tests function editing corresponding file stored tests/testthat/ folder. use package testthat implement unit tests. Check tests running:","code":"devtools::check() devtools::test()"},{"path":"https://frbcesab.github.io/funbiogeo/CONTRIBUTING.html","id":"new-feature","dir":"","previous_headings":"Contributing code","what":"New feature","title":"Contributing to funbiogeo","text":"want contribute submitting new feature, please follow workflow: Create new R file folder R/. Implement code function. Document function w/ roxygen2 syntax. necessary, add additional dependencies DESCRIPTION file. Update package documentation w/ devtools::document(). Create new R file folder tests/testthat/. Implement unit tests new function. Check integrity package w/ devtools::check(). Thanks contribution!","code":""},{"path":"https://frbcesab.github.io/funbiogeo/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 2, June 1991Copyright © 1989, 1991 Free Software Foundation, Inc.,51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"licenses software designed take away freedom share change . contrast, GNU General Public License intended guarantee freedom share change free software–make sure software free users. General Public License applies Free Software Foundation’s software program whose authors commit using . (Free Software Foundation software covered GNU Lesser General Public License instead.) can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge service wish), receive source code can get want , can change software use pieces new free programs; know can things. protect rights, need make restrictions forbid anyone deny rights ask surrender rights. restrictions translate certain responsibilities distribute copies software, modify . example, distribute copies program, whether gratis fee, must give recipients rights . must make sure , , receive can get source code. must show terms know rights. protect rights two steps: (1) copyright software, (2) offer license gives legal permission copy, distribute /modify software. Also, author’s protection , want make certain everyone understands warranty free software. software modified someone else passed , want recipients know original, problems introduced others reflect original authors’ reputations. Finally, free program threatened constantly software patents. wish avoid danger redistributors free program individually obtain patent licenses, effect making program proprietary. prevent , made clear patent must licensed everyone’s free use licensed . precise terms conditions copying, distribution modification follow.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/LICENSE.html","id":"terms-and-conditions-for-copying-distribution-and-modification","dir":"","previous_headings":"","what":"TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION","title":"GNU General Public License","text":"0. License applies program work contains notice placed copyright holder saying may distributed terms General Public License. “Program”, , refers program work, “work based Program” means either Program derivative work copyright law: say, work containing Program portion , either verbatim modifications /translated another language. (Hereinafter, translation included without limitation term “modification”.) licensee addressed “”. Activities copying, distribution modification covered License; outside scope. act running Program restricted, output Program covered contents constitute work based Program (independent made running Program). Whether true depends Program . 1. may copy distribute verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice disclaimer warranty; keep intact notices refer License absence warranty; give recipients Program copy License along Program. may charge fee physical act transferring copy, may option offer warranty protection exchange fee. 2. may modify copy copies Program portion , thus forming work based Program, copy distribute modifications work terms Section 1 , provided also meet conditions: ) must cause modified files carry prominent notices stating changed files date change. b) must cause work distribute publish, whole part contains derived Program part thereof, licensed whole charge third parties terms License. c) modified program normally reads commands interactively run, must cause , started running interactive use ordinary way, print display announcement including appropriate copyright notice notice warranty (else, saying provide warranty) users may redistribute program conditions, telling user view copy License. (Exception: Program interactive normally print announcement, work based Program required print announcement.) requirements apply modified work whole. identifiable sections work derived Program, can reasonably considered independent separate works , License, terms, apply sections distribute separate works. distribute sections part whole work based Program, distribution whole must terms License, whose permissions licensees extend entire whole, thus every part regardless wrote . Thus, intent section claim rights contest rights work written entirely ; rather, intent exercise right control distribution derivative collective works based Program. addition, mere aggregation another work based Program Program (work based Program) volume storage distribution medium bring work scope License. 3. may copy distribute Program (work based , Section 2) object code executable form terms Sections 1 2 provided also one following: ) Accompany complete corresponding machine-readable source code, must distributed terms Sections 1 2 medium customarily used software interchange; , b) Accompany written offer, valid least three years, give third party, charge cost physically performing source distribution, complete machine-readable copy corresponding source code, distributed terms Sections 1 2 medium customarily used software interchange; , c) Accompany information received offer distribute corresponding source code. (alternative allowed noncommercial distribution received program object code executable form offer, accord Subsection b .) source code work means preferred form work making modifications . executable work, complete source code means source code modules contains, plus associated interface definition files, plus scripts used control compilation installation executable. However, special exception, source code distributed need include anything normally distributed (either source binary form) major components (compiler, kernel, ) operating system executable runs, unless component accompanies executable. distribution executable object code made offering access copy designated place, offering equivalent access copy source code place counts distribution source code, even though third parties compelled copy source along object code. 4. may copy, modify, sublicense, distribute Program except expressly provided License. attempt otherwise copy, modify, sublicense distribute Program void, automatically terminate rights License. However, parties received copies, rights, License licenses terminated long parties remain full compliance. 5. required accept License, since signed . However, nothing else grants permission modify distribute Program derivative works. actions prohibited law accept License. Therefore, modifying distributing Program (work based Program), indicate acceptance License , terms conditions copying, distributing modifying Program works based . 6. time redistribute Program (work based Program), recipient automatically receives license original licensor copy, distribute modify Program subject terms conditions. may impose restrictions recipients’ exercise rights granted herein. responsible enforcing compliance third parties License. 7. , consequence court judgment allegation patent infringement reason (limited patent issues), conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. distribute satisfy simultaneously obligations License pertinent obligations, consequence may distribute Program . example, patent license permit royalty-free redistribution Program receive copies directly indirectly , way satisfy License refrain entirely distribution Program. portion section held invalid unenforceable particular circumstance, balance section intended apply section whole intended apply circumstances. purpose section induce infringe patents property right claims contest validity claims; section sole purpose protecting integrity free software distribution system, implemented public license practices. Many people made generous contributions wide range software distributed system reliance consistent application system; author/donor decide willing distribute software system licensee impose choice. section intended make thoroughly clear believed consequence rest License. 8. distribution /use Program restricted certain countries either patents copyrighted interfaces, original copyright holder places Program License may add explicit geographical distribution limitation excluding countries, distribution permitted among countries thus excluded. case, License incorporates limitation written body License. 9. Free Software Foundation may publish revised /new versions General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies version number License applies “later version”, option following terms conditions either version later version published Free Software Foundation. Program specify version number License, may choose version ever published Free Software Foundation. 10. wish incorporate parts Program free programs whose distribution conditions different, write author ask permission. software copyrighted Free Software Foundation, write Free Software Foundation; sometimes make exceptions . decision guided two goals preserving free status derivatives free software promoting sharing reuse software generally.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/LICENSE.html","id":"no-warranty","dir":"","previous_headings":"","what":"NO WARRANTY","title":"GNU General Public License","text":"11. PROGRAM LICENSED FREE CHARGE, WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION. 12. EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MAY MODIFY /REDISTRIBUTE PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES. END TERMS CONDITIONS","code":""},{"path":"https://frbcesab.github.io/funbiogeo/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively convey exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program interactive, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, commands use may called something show w show c; even mouse-clicks menu items–whatever suits program. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. sample; alter names: General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA. Gnomovision version 69, Copyright (C) year name of author Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'. This is free software, and you are welcome to redistribute it under certain conditions; type `show c' for details. Yoyodyne, Inc., hereby disclaims all copyright interest in the program `Gnomovision' (which makes passes at compilers) written by James Hacker.  <signature of Ty Coon>, 1 April 1989 Ty Coon, President of Vice"},{"path":"https://frbcesab.github.io/funbiogeo/articles/diagnostic-plots.html","id":"naming-convention","dir":"Articles","previous_headings":"","what":"Naming Convention","title":"Diagnostic Plots in funbiogeo","text":"Like rest funbiogeo package, functions named following certain conventions. one, avoid collision packages functions prefixed fb_. Second plotting functions begin either fb_plot_*(), regular plots, fb_map_*() plot maps. function names funbiogeo generally long specific clear possible. case doubt re-read function name, represent clear name.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/articles/diagnostic-plots.html","id":"regular-plots","dir":"Articles","previous_headings":"","what":"Regular Plots","title":"Diagnostic Plots in funbiogeo","text":"section describe call “regular plots”, .e. plots non-spatial objects (density plots, bivariate plots, lollipop charts, heatmaps, etc.). made distinction maps specific challenges. default regular plots proposed funbiogeo quite specific data. section ’ll summarize plots , needed arguments, interpret output. function described specific subsections alphabetical order.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/articles/diagnostic-plots.html","id":"distribution-of-trait-coverages-across-sites","dir":"Articles","previous_headings":"Regular Plots","what":"Distribution of trait coverages across sites","title":"Diagnostic Plots in funbiogeo","text":"Visualizing trait coverage sites can help isolate traits may show consistently low coverage. Also can help notice groups sites higher coverage certain traits others. can plot using fb_plot_distribution_site_trait_coverage() function. takes two arguments: site_species site species data.frame species_traits species traits data.frame. Note internally function uses ggridges plot distributions. package thus needed run function. Example:  see distribution species coverage per site (along x-axis) trait (along y-axis) traits taken together (shown top top line all_traits). proportions y-axis labels average coverage observed trait. example, considering adult body mass trait mean achieve average coverage 95.3%, meaning average across sites 95.3% species covered. can compare trait max_longevity corresponds maximum longevity species. see average trait coverage across sites 82.1%. see distribution however rather wide, sites showing coverage around 90% (large bump), sites close 62% coverage. plot considers distribution species across sites instead focusing species traits data.frame. maybe useful realize, example, traits species occurring rarely missing wouldn’t necessarily translate low site-level trait coverage.","code":"fb_plot_distribution_site_trait_coverage(site_species, species_traits) #> Loading required namespace: ggridges #> Picking joint bandwidth of 0.00988"},{"path":"https://frbcesab.github.io/funbiogeo/articles/diagnostic-plots.html","id":"plotting-the-number-of-sites-by-species","dir":"Articles","previous_headings":"Regular Plots","what":"Plotting the number of sites by species","title":"Diagnostic Plots in funbiogeo","text":"function fb_plot_number_sites_by_species() allows explore site species data.frame. shows number (proportion) sites occupied species. first argument site_species, site species data.frame necessary second one threshold_sites_proportion, target proportion sites coverage, optional.  function outputs dotchart. number occupied sites per species indicated bottom x-axis, top x-axis represents proportion occupied sites. left y-axis label species names (parenthesis) rank increasing prevalence. Note readability constraints, limited number species labeled y-axis, displayed dots plot. Adding second argument threshold_sites_proportion displays vertical bar target proportion sites see many species occupy less given proportion sites. Let’s say want see species present least 40% sites:  threshold bar helps us get sense many species present least 40% sites. also displays corresponding number sites.","code":"fb_plot_number_sites_by_species(site_species) #> There are more than 30 species, the y-axis will label the position of 30 evenly spaced species (along their prevalence) fb_plot_number_sites_by_species(site_species, threshold_sites_proportion = 0.4) #> There are more than 30 species, the y-axis will label the position of 30 evenly spaced species (along their prevalence)"},{"path":"https://frbcesab.github.io/funbiogeo/articles/diagnostic-plots.html","id":"plotting-the-number-of-species-per-trait","dir":"Articles","previous_headings":"Regular Plots","what":"Plotting the number of species per trait","title":"Diagnostic Plots in funbiogeo","text":"One way look species traits data.frame look number species non-missing trait values trait. fb_plot_number_species_by_trait() function exactly . first argument species_traits, species traits data.frame, necessary second one threshold_species_proportion, target proportion species coverage, optional.  function outputs lollipop chart. bottom x-axis number species covered given trait (top x-axis represents proportion species, directly proportional). y-axis represents trait. dot represents actual coverage observed corresponding proportion species written top. figure see 82.6% species non-missing adult body mass species trait data.frame, 54.4% non-missing maximum longevity. Adding second argument threshold_species_proportion displays vertical bar target proportion easily target traits covering certain proportion species. Let’s say want see traits available least 70% species:  red dashed vertical line shows corresponding species coverage labels indicating proportion corresponding number species (n = 104).","code":"fb_plot_number_species_by_trait(species_traits) fb_plot_number_species_by_trait(species_traits, threshold_species_proportion = 0.7)"},{"path":"https://frbcesab.github.io/funbiogeo/articles/diagnostic-plots.html","id":"plotting-the-number-of-traits-per-species","dir":"Articles","previous_headings":"Regular Plots","what":"Plotting the number of traits per species","title":"Diagnostic Plots in funbiogeo","text":"can also display number traits available per species. Showing species quite difficult read, decided instead represent number species given number known traits. Also, trait ecologists interested multiple traits, considered nested proportions traits: considering number species covered least one trait, least two, etc. represent plot can use function fb_plot_number_traits_by_species(), uses two arguments. first species_traits species traits data.frame. second argument threshold_species_proportion optional corresponds certain threshold proportion species, line can added plot. Using included dataset gives:  x-axis represents number species concerned (bottom x-axis displays actual number species, top x-axis displays corresponding proportion species). y-axis shows number traits. Note categories nested: set species least 1 trait contains set species least 2 traits, forth. definition species 0 known traits, show plot reference see proportion decreases increasing number traits. proportion shown text dot representing . example, 62.4% species least 4 traits. plot tell us species least 4 traits share trait combination (multiple 4 trait combinations), ’s first indication. Let’s say ’re interested combinations traits least 50% species covered. can use second argument show :  Adding argument displays vertical bar target proportion species easily target number traits covering certain proportion species. red dashed vertical line shows corresponding species coverage labels indicating proportion corresponding number species (n = 74).","code":"fb_plot_number_traits_by_species(species_traits) fb_plot_number_traits_by_species(species_traits, threshold_species_proportion = 0.5)"},{"path":"https://frbcesab.github.io/funbiogeo/articles/diagnostic-plots.html","id":"plotting-environmental-position-of-sites","dir":"Articles","previous_headings":"Regular Plots","what":"Plotting environmental position of sites","title":"Diagnostic Plots in funbiogeo","text":"see sites biased environmentally can nice locate along environmental variables compared full region. sake simplicity can focus two variables compare sites region. fb_plot_site_environment() function . four arguments: first one, site_locations, provides locations sites sf object, environment_raster terra raster object, next two arguments first_layer second_layer names two variables extracted environment_raster make plot. included dataset can represent first 6 sites along total annual precipitation mean annual temperature full region:  plot shows first selected layer x-axis second one y-axis. environmental position sites displayed using big blue dots, light gray pixels environmental variables extracted provided environmental raster. figure can show us first six sites actually lower temperature higher annual precipitation places environmental rasters.","code":"# Create the environmental rasters prec <- system.file(\"extdata\", \"annual_tot_prec.tif\", package = \"funbiogeo\") tavg <- system.file(\"extdata\", \"annual_mean_temp.tif\", package = \"funbiogeo\")  layers <- terra::rast(c(tavg, prec))  # Make plot (show environmental position of 6 first sites) fb_plot_site_environment(head(site_locations), layers) #> Warning: Removed 49503 rows containing missing values or values outside the scale range #> (`geom_point()`)."},{"path":"https://frbcesab.github.io/funbiogeo/articles/diagnostic-plots.html","id":"plotting-trait-coverage-for-all-sites","dir":"Articles","previous_headings":"Regular Plots","what":"Plotting trait coverage for all sites","title":"Diagnostic Plots in funbiogeo","text":"select appropriate sites traits, can visualize trait coverage per site per trait. exactly done fb_plot_site_traits_completeness() takes site_species, site species data.frame, species_traits, species traits data.frame, arguments. can use included dataset example:  plot shows trait along x-axis (average coverage across sites labels) sites along y-axis. thin horizontal line represents site. color indicates coverage trait column. Note readability reasons color scale discretized 0 100% coverage. Traits ranked decreasing average coverage. last column all_traits contains coverage traits taken together. figure can see sites 80% coverage adult body mass litter size.","code":"fb_plot_site_traits_completeness(site_species, species_traits)"},{"path":"https://frbcesab.github.io/funbiogeo/articles/diagnostic-plots.html","id":"plotting-trait-coverage-per-species","dir":"Articles","previous_headings":"Regular Plots","what":"Plotting trait coverage per species","title":"Diagnostic Plots in funbiogeo","text":"select appropriate traits, can visualize trait coverage per species. done fb_plot_species_traits_completeness() takes species_traits, species traits data.frame, sole argument. can use included dataset example:  figure visualizes directly species trait data.frame. x-axis displays different traits, ranked left right decreasing coverage order (indicated x-axis labels). last column all_traits considers traits taken together. y-axis represents species decreasing coverage order bottom top. cell thus represents trait species: blue trait known red missing. plot see significant proportion species missing traits even non-missing traits, adult body mass, known 82.6% species.","code":"fb_plot_species_traits_completeness(species_traits)"},{"path":"https://frbcesab.github.io/funbiogeo/articles/diagnostic-plots.html","id":"plotting-number-of-species-with-missing-traits","dir":"Articles","previous_headings":"Regular Plots","what":"Plotting number of species with missing traits","title":"Diagnostic Plots in funbiogeo","text":"Maybe ’re rather interested plotting number species known (missing) traits dataset. plot alternative one previous section. can done fb_plot_species_traits_missingness() takes species_traits, species traits data.frame, argument well all_traits know additional row used display summary traits taken together.  plot displays number species known missing traits. shows trait separate line proportional bar chart total numbers included within bar. see 53 species traits known 96 don’t. Adult body mass known 123 species missing 26.","code":"fb_plot_species_traits_missingness(species_traits, all_traits = TRUE)"},{"path":"https://frbcesab.github.io/funbiogeo/articles/diagnostic-plots.html","id":"displaying-traits-combinations","dir":"Articles","previous_headings":"Regular Plots","what":"Displaying traits combinations","title":"Diagnostic Plots in funbiogeo","text":"Looking traits coverage species continuously maybe impractical difficult. example, trying display thousands species trait coverage varies widely across species. One way reduce size analyzed (thus visualized) dataset instead count frequency appear combinations present/missing traits. done fb_plot_trait_combination_frequencies() takes two arguments: species_traits, species traits data.frame, order_by (equals either \"number\", default option, \"complete\"), influences order plot (details ). can use included dataset example:  x-axis represents individual traits ranked alphabetical order left right. y-axis represents different combinations. labels y-axis show number frequency combination. cell blue means trait present, red means trait missing. default combinations ordered increasing number top bottom, numerous combinations trait presences bottom graph. graph can see exactly 53 species (35.6% total number species provided) traits present, 21 species (14.1%) single trait dataset. change order_by \"complete\", combinations ordered instead number trait presents among :  complete combinations shown bottom, combinations missing traits top.","code":"fb_plot_trait_combination_frequencies(species_traits) fb_plot_trait_combination_frequencies(species_traits, order_by = \"complete\")"},{"path":"https://frbcesab.github.io/funbiogeo/articles/diagnostic-plots.html","id":"displaying-traits-correlations","dir":"Articles","previous_headings":"Regular Plots","what":"Displaying traits correlations","title":"Diagnostic Plots in funbiogeo","text":"plot functions funbiogeo show traits independently one another. However, functional biogeography analyses, trait correlations maybe relevant. exactly done fb_plot_trait_correlation(). takes first needed argument species_traits, species traits data.frame. arguments optional passed stats::cor(). Note function works numerical traits complete observations. silently removes species NA. included dataset example:  x- y-axes represent different traits. intersection shown squared colored function correlation coefficient (purple means close -1 correlation brown means close 1, white means close 0). correlation coefficients also displayed middle square. visualization can see adult body mass gestation length quite highly correlated (cor = 0.7), diet breadth correlated trait.","code":"fb_plot_trait_correlation(species_traits)"},{"path":"https://frbcesab.github.io/funbiogeo/articles/diagnostic-plots.html","id":"maps","dir":"Articles","previous_headings":"","what":"Maps","title":"Diagnostic Plots in funbiogeo","text":"Map functions funbiogeo provide good default visualization leveraging spatial information sites. know producing map R challenging. ’s provide helper functions. course, functions basics either customize adding ggplot2 commands returned plots, look code produce similar plots way want. example, functions display background maps complex accommodate use cases quite localized sites global level analyses. Note maps always Coordinate Reference System provided site_locations object. can also tweak adding custom ggplot2::coord_sf() call.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/articles/diagnostic-plots.html","id":"mapping-traits-coverage-of-sites","dir":"Articles","previous_headings":"Maps","what":"Mapping traits coverage of sites","title":"Diagnostic Plots in funbiogeo","text":"function fb_map_site_traits_completeness() maps trait coverage (proportion species, weighted relative abundance relevant, known trait values) site traits. takes three arguments: site_locations (spatial locations sites), site_species (site species data.frame), species_traits (species traits data.frame). use included dataset funbiogeo gives:  displays maps sites, colored trait coverage. facet represents different trait all_traits facet consider traits together. plot can see average South Western Europe less covered traits North Western Europe. may indication higher species richness South compared North makes achieving high coverages difficult. Furthermore, can see site Netherlands 0% coverage diet breadth. likely sign sign low species richness absence diet breadth species.","code":"fb_map_site_traits_completeness(site_locations, site_species, species_traits)"},{"path":"https://frbcesab.github.io/funbiogeo/articles/diagnostic-plots.html","id":"mapping-arbitrary-site-data","dir":"Articles","previous_headings":"Maps","what":"Mapping arbitrary site data","title":"Diagnostic Plots in funbiogeo","text":"flexible possible, funbiogeo provides function map arbitrary site data whether quantitative qualitative fb_map_site_data() function. first argument takes site_locations, spatial locations sites sf object, second argument site_data data.frame containing \"site\" column data additional columns, third last required argument selected_col name column provided site_data data.frame going used variable display. three arguments required. example, want get map species richness included dataset can following:  map, can example see Northern part dataset less species-rich center South. Now imagine want display category sites “Testing” “Training”, depending set belong . can use following display map:","code":"# Compute Species Richness site_rich <- fb_count_species_by_site(site_species)  # Map of Species Richness fb_map_site_data(site_locations, site_rich, \"n_species\") # Generate categories site_cat <- data.frame(   site = site_species$site,   set  = sample(c(\"Testing\", \"Training\"), nrow(site_species), replace = TRUE) )  # Display them fb_map_site_data(site_locations, site_cat, \"set\")"},{"path":"https://frbcesab.github.io/funbiogeo/articles/diagnostic-plots.html","id":"mapping-site-rasters","dir":"Articles","previous_headings":"Maps","what":"Mapping site rasters","title":"Diagnostic Plots in funbiogeo","text":"Mapping rasters can quite cumbersome R. funbiogeo provides generic function map fb_map_raster(). needs first argument terra SpatRaster object. can useful visualizing environmental layers example. function display raster provided projection. example:","code":"# Getting the raster tavg <- system.file(\"extdata\", \"annual_mean_temp.tif\", package = \"funbiogeo\") tavg <- terra::rast(tavg)  # Mapping the raster fb_map_raster(tavg)"},{"path":"https://frbcesab.github.io/funbiogeo/articles/funbiogeo.html","id":"provided-data","dir":"Articles","previous_headings":"","what":"Provided data","title":"Get started with funbiogeo","text":"interested mapping functional traits mammals Europe. used range maps data IUCN trait data PanTHERIA database (Jones et al. 2009). initial extraction scripts available GitHub. functions funbiogeo mostly leverage three different objects: species x traits data.frame, describes traits (columns) species (rows) (species_traits dataset funbiogeo); site x species data.frame, describes presence/absence, abundance, cover species (columns) across sites (rows) (site_species dataset funbiogeo); site x locations object, describes physical location sites sf object (site_locations dataset funbiogeo). can load example data using data(..., package = \"funbiogeo\") call: following sections ’ll describe detail three provided datasets package.","code":"data(\"site_species\", package = \"funbiogeo\") data(\"site_locations\", package = \"funbiogeo\") data(\"species_traits\", package = \"funbiogeo\")"},{"path":"https://frbcesab.github.io/funbiogeo/articles/funbiogeo.html","id":"species-x-traits","dir":"Articles","previous_headings":"Provided data","what":"Species x Traits","title":"Get started with funbiogeo","text":"object contains traits values multiple traits (columns) studied species (rows). data.frame. first column contain species names columns contain trait values. Note ’ll talking species throughout vignette arguments funbiogeo, package doesn’t make assumption biological level. can individuals, populations, strains, species, genera, families, etc. important fact trait data level want work. Let’s examine species_traits data included package: First lines species x traits dataset first column \"species\" contains species names, next 6 columns contain different traits species. Note species names anonymized IUCN data redistributed. Let’s look summary trait dataset: can see 149 included species missing trait values. example, don’t body mass information 26 species. Note use species traits data.frame, follow similar structure first column named \"species\" ones containing traits.","code":"summary(species_traits) #>    species          adult_body_mass    gestation_length  litter_size    #>  Length:149         Min.   :     2.3   Min.   : 19.50   Min.   :0.980   #>  Class :character   1st Qu.:    11.2   1st Qu.: 26.61   1st Qu.:1.500   #>  Mode  :character   Median :    35.9   Median : 41.99   Median :3.055   #>                     Mean   : 18809.7   Mean   : 69.93   Mean   :3.369   #>                     3rd Qu.:  2573.2   3rd Qu.: 76.70   3rd Qu.:4.970   #>                     Max.   :675876.7   Max.   :265.99   Max.   :8.990   #>                     NA's   :26         NA's   :61       NA's   :35      #>  max_longevity   sexual_maturity_age  diet_breadth   #>  Min.   : 12.0   Min.   :  25.37     Min.   :1.000   #>  1st Qu.: 58.8   1st Qu.: 106.67     1st Qu.:1.000   #>  Median :180.0   Median : 348.44     Median :1.000   #>  Mean   :171.3   Mean   : 392.01     Mean   :2.458   #>  3rd Qu.:252.0   3rd Qu.: 549.05     3rd Qu.:4.000   #>  Max.   :600.0   Max.   :1542.25     Max.   :8.000   #>  NA's   :68      NA's   :65          NA's   :66"},{"path":"https://frbcesab.github.io/funbiogeo/articles/funbiogeo.html","id":"site-x-species","dir":"Articles","previous_headings":"Provided data","what":"Site x Species","title":"Get started with funbiogeo","text":"object contains species occurrences/abundance/coverage sites study area. data.frame. first column, \"site\", contains site names columns contains abundance species across sites. Note talking sites abstract way. can plots, assemblages, whatever collections species ’re interested . package funbiogeo comes example dataset European mammals site_species. Let’s look : Format site x species dataset example dataset contains occurrence 149 mammal species across 1,505 sites (grid cells 0.5° x 0.5° resolution). Note use site species data.frame, follow similar structure first column named \"sites\" ones containing presence information species across sites.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/articles/funbiogeo.html","id":"site-x-locations","dir":"Articles","previous_headings":"Provided data","what":"Site x Locations","title":"Get started with funbiogeo","text":"object contains geographical location sites. sf object sf package. spatial R objects describe geographical locations. sites can arbitrary shapes: points, regular polygons, irregular polygons, even line transects! make sure data well plotted specify Coordinate Reference System (CRS) object. package funbiogeo comes example dataset site_locations defining location 1,505 sites (grid cells 0.5° x 0.5° resolution) polygons. contains names site first column \"site\": Note use site locations object, follow similar structure, sf object first column named \"sites\".","code":"site_locations #> Simple feature collection with 1505 features and 1 field #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -9.978179 ymin: 35.84736 xmax: 23.02182 ymax: 59.84736 #> Geodetic CRS:  WGS 84 #> First 10 features: #>    site                           geom #> 1     1 POLYGON ((5.521821 59.84736... #> 2     2 POLYGON ((6.521821 59.84736... #> 3     3 POLYGON ((7.021821 59.84736... #> 4     4 POLYGON ((7.521821 59.84736... #> 5     5 POLYGON ((8.021821 59.84736... #> 6     6 POLYGON ((8.521821 59.84736... #> 7     7 POLYGON ((9.021821 59.84736... #> 8     8 POLYGON ((9.521821 59.84736... #> 9     9 POLYGON ((10.02182 59.84736... #> 10   10 POLYGON ((10.52182 59.84736..."},{"path":"https://frbcesab.github.io/funbiogeo/articles/funbiogeo.html","id":"visualizing-the-data-diagnostic-plots","dir":"Articles","previous_headings":"","what":"Visualizing the data (diagnostic plots)","title":"Get started with funbiogeo","text":"funbiogeo provides many functions display data help user select specific traits, species, /sites. going detail section (see full list diagnostic plots vignette. call diagnostic plots help us overview dataset prior analyses.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/articles/funbiogeo.html","id":"trait-completeness-per-species","dir":"Articles","previous_headings":"Visualizing the data (diagnostic plots)","what":"Trait completeness per species","title":"Get started with funbiogeo","text":"first way visualize data.frame look proportion species non-missing traits using fb_plot_number_species_by_trait() function. takes species trait data.frame input.  plot shows us number species (along x-axis) function trait name (along y-axis). number concerned species shown bottom plot corresponding proportion species (compared species included trait dataset) indicated secondary x-axis top. proportion species concerned shown right point. example, example dataset, 82.6% species non-NA adult body mass. function also include way provide target proportion species second argument. display proportion dark red dashed line. example, want visualize traits cover 75% species:  top number shows corresponding number species.","code":"fb_plot_number_species_by_trait(species_traits) fb_plot_number_species_by_trait(species_traits, threshold_species_proportion = 0.75)"},{"path":"https://frbcesab.github.io/funbiogeo/articles/funbiogeo.html","id":"number-of-traits-per-species","dir":"Articles","previous_headings":"Visualizing the data (diagnostic plots)","what":"Number of Traits per Species","title":"Get started with funbiogeo","text":"Another way filter data select certain species least certain number traits. can visualized using fb_plot_number_traits_by_species() function. Similarly -mentioned function, takes species x traits data.frame first argument:  plot shows number (bottom x-axis) proportion (top x-axis) species covered specific number traits (0 6 example).","code":"fb_plot_number_traits_by_species(species_traits)"},{"path":"https://frbcesab.github.io/funbiogeo/articles/funbiogeo.html","id":"filtering-the-data","dir":"Articles","previous_headings":"","what":"Filtering the data","title":"Get started with funbiogeo","text":"Now displayed diagnostic plots, can decide thresholds filter data following analyses.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/articles/funbiogeo.html","id":"filter-trait-by-species-coverage","dir":"Articles","previous_headings":"Filtering the data","what":"Filter trait by species coverage","title":"Get started with funbiogeo","text":"want select traits available least 75% species. can use fb_filter_traits_by_species_coverage() function. function takes species traits data.frame outputs dataset traits filtered (less columns). second argument threshold_species_proportion threshold proportion species covered: function outputs filtered species-traits dataset retaining traits covering least 75% species. end keep two traits: body mass litter size.","code":"# Initial dimension of the input data dim(species_traits) #> [1] 149   7  # Filter traits  red_sp_traits <- fb_filter_traits_by_species_coverage(   species_traits, threshold_species_proportion =  0.75 )  dim(red_sp_traits) #> [1] 149   3  # The reduced data set now has fewer trait columns head(red_sp_traits) #>   species adult_body_mass litter_size #> 1  sp_001       461900.76        1.25 #> 2  sp_002           21.11        5.64 #> 3  sp_003              NA          NA #> 4  sp_004              NA          NA #> 5  sp_005           31.60        4.94 #> 6  sp_006           21.90        5.16"},{"path":"https://frbcesab.github.io/funbiogeo/articles/funbiogeo.html","id":"filter-species-by-trait-coverage","dir":"Articles","previous_headings":"Filtering the data","what":"Filter species by trait coverage","title":"Get started with funbiogeo","text":"Similarly filter species trait coverage. example like make sure species filtered previously show least one two traits selected thus exclude species neither traits available. can use function fb_filter_species_by_trait_coverage() species x traits data.frame first argument second argument proportion traits covered species. thus selected 2 traits cover least 75% initial species list 127 species known values two traits.","code":"# Filter species with at least 50% of included (two traits) # at least one trait red_sp_traits_2 <- fb_filter_species_by_trait_coverage(   red_sp_traits, threshold_traits_proportion = 0.5 )  head(red_sp_traits_2) #>   species adult_body_mass litter_size #> 1  sp_001       461900.76        1.25 #> 2  sp_002           21.11        5.64 #> 5  sp_005           31.60        4.94 #> 6  sp_006           21.90        5.16 #> 7  sp_007           18.26        5.72 #> 9  sp_009          903.98        2.50  dim(red_sp_traits_2) #> [1] 127   3"},{"path":"https://frbcesab.github.io/funbiogeo/articles/funbiogeo.html","id":"filter-sites-by-trait-coverage","dir":"Articles","previous_headings":"Filtering the data","what":"Filter sites by trait coverage","title":"Get started with funbiogeo","text":"Now filtered traits species interest need filter sites, contain enough species traits available. Similarly function fb_filter_sites_by_trait_coverage() takes two first arguments site x species data.frame species x traits data.frame. third argument threshold_traits_proportion indicates percent coverage traits filter site. Note coverage weighted occurrence, abundance, cover depending content site x species data.frame. Let’s say ’re interested sites species available traits represent least 90% species present: output function site x species data.frame selected sites species. Now selected 1,268 sites 1,505, 2 traits 127 species.","code":"# Initial site x species data dim(site_species) #> [1] 1505  150  # Filter sites with at least 90% species covered filt_sites <- fb_filter_sites_by_trait_coverage(   site_species, red_sp_traits_2, threshold_traits_proportion = 0.9 )  # Filtered sites dim(filt_sites) #> [1] 1268  150  filt_sites[1:4, 1:4] #>   site sp_001 sp_002 sp_003 #> 1    1      1      0      0 #> 2    2      1      0      0 #> 3    3      1      0      0 #> 4    4      1      0      0"},{"path":"https://frbcesab.github.io/funbiogeo/articles/funbiogeo.html","id":"computing-functional-diversity-metrics","dir":"Articles","previous_headings":"","what":"Computing Functional Diversity metrics","title":"Get started with funbiogeo","text":"funbiogeo functions helped us filter data appropriately enough available trait information species sites. can use filtered datasets proceed analyses using readily available tools functional diversity indices. use preferred packages compute functional diversity indices like fundiversity, betapart, hypervolume. sake example included function funbiogeo compute Community-Weighted Mean (CWM, Garnier et al. 2004) named fb_cwm(). CWM abundance-weighted average trait per site. ’ll using following section ’ll show another example computing functional diversity indices using fundiversity package.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/articles/funbiogeo.html","id":"community-weighted-mean-cwm","dir":"Articles","previous_headings":"Computing Functional Diversity metrics","what":"Community-Weighted Mean (CWM)","title":"Get started with funbiogeo","text":"’re interested look spatial distribution average body mass litter size European mammals. , can compute community-weighted mean traits. ’ll use fb_cwm() function , takes site x species data.frame species x traits data.frame arguments. outputs data.frame 3 columns: first one, site, shows site name provided input site x species data.frame, trait indicates trait name CWM computed, cwm shows value CWM.","code":"# Note that we're reusing our filtered data to compute CWM cwm <- fb_cwm(filt_sites, red_sp_traits_2) #> Some species had NA trait values, removing them from CWM computation  head(cwm) #>   site           trait      cwm #> 1    1 adult_body_mass 31974.15 #> 2    2 adult_body_mass 39911.51 #> 3    3 adult_body_mass 39912.54 #> 4    4 adult_body_mass 39912.54 #> 5    5 adult_body_mass 41389.44 #> 6    6 adult_body_mass 39912.37"},{"path":"https://frbcesab.github.io/funbiogeo/articles/funbiogeo.html","id":"compute-functional-diversity-indices","dir":"Articles","previous_headings":"Computing Functional Diversity metrics","what":"Compute functional diversity indices","title":"Get started with funbiogeo","text":"can also integrate filtered datasets functional diversity computation pipeline. ’ll show example computing functional richness fundiversity. now table Functional Richness computed sites.","code":"## To install 'fundiversity' uncomment the following line # install.packages(\"fundiversity\")  # Functional richness in 'fundiversity' requires all the traits to be known # so we need to filter the traits filt_traits <- subset(   red_sp_traits, !is.na(adult_body_mass) & !is.na(litter_size) )  # We need to transform species and site names as row names for species-traits # and site-species data.frames, as required by 'fundiversity' rownames(filt_traits) <- filt_traits$species filt_traits <- filt_traits[, -1]  rownames(filt_sites) <- filt_sites$site filt_sites <- filt_sites[, -1]  # Scale traits filt_traits <- scale(filt_traits)  # Compute Functional Richness fric <- fundiversity::fd_fric(filt_traits, filt_sites) #> Differing number of species between trait dataset and site-species matrix #> Taking subset of species #> Warning in fundiversity::fd_fric(filt_traits, filt_sites): Some sites had less #> species than traits so returned FRic is 'NA'  head(fric) #>   site     FRic #> 1    1 10.78778 #> 2    2 10.78778 #> 3    3 10.78778 #> 4    4 10.78778 #> 5    5 10.78778 #> 6    6 10.78778"},{"path":[]},{"path":"https://frbcesab.github.io/funbiogeo/articles/funbiogeo.html","id":"map-of-environmental-raster","dir":"Articles","previous_headings":"Putting variables on the map","what":"Map of environmental raster","title":"Get started with funbiogeo","text":"want display environment associated sites interest, can leverage environmental raster layers, like mean annual temperature. Fortunately, access example raster mean annual temperature funbiogeo. package provides helper function display raster layer easily (without assumption projection) named fb_map_raster():  can also combine annual precipitation information available example  function allows visualization raster simple fashion, doesn’t tell us anything environmental variable sites. next section follow example mapping environmental variable.","code":"# Read raster tavg <- system.file(   \"extdata\", \"annual_mean_temp.tif\", package = \"funbiogeo\" ) tavg <- terra::rast(tavg)  # Map raster fb_map_raster(tavg) +    scale_fill_distiller(\"Temperature\", palette = \"Spectral\") +   theme(legend.position = \"bottom\") +    ggtitle(\"Mean annual temperature in Europe\") library(\"patchwork\")  # Read raster ------------------------------------------------------------------ tavg <- system.file(\"extdata\", \"annual_mean_temp.tif\", package = \"funbiogeo\") tavg <- terra::rast(tavg)  prec <- system.file(\"extdata\", \"annual_tot_prec.tif\", package = \"funbiogeo\") prec <- terra::rast(prec)  # Individual Maps -------------------------------------------------------------- map_temperature <- fb_map_raster(tavg, legend.position = \"none\") +    scale_fill_distiller(\"Temperature\", palette = \"Spectral\")  map_precipitation <- fb_map_raster(prec) +    scale_fill_distiller(\"Precipitation\", direction = 1)  # Plot composition -------------------------------------------------------------  (map_temperature / map_precipitation) +    plot_annotation(title = \"Europe\",                    theme = theme(plot.title = element_text(face = \"bold\"))) &    theme_classic() &   theme(text = element_text(family = \"mono\"))"},{"path":"https://frbcesab.github.io/funbiogeo/articles/funbiogeo.html","id":"map-of-average-environmental-variable-in-site","dir":"Articles","previous_headings":"Putting variables on the map","what":"Map of average environmental variable in site","title":"Get started with funbiogeo","text":"get average environmental variable site can use fb_get_environment() function, takes arguments site-locations object environmental raster terra package. default, takes average raster values per site. variable names columns based names provided raster. put values map can use fb_map_site_data() function, allows mapping arbitrary site-level variables. takes three needed arguments: first , site_locations, sf object describing sites’ geographic locations; second argument site_data, data.frame giving additional data indexed site; selected_col, character giving name column plot site_data argument. can thus plot mean annual temperature sites following commands:","code":"site_mat <- fb_get_environment(site_locations, tavg)  head(site_mat) #>   site annual_mean_temp #> 1    1        6.6755822 #> 2    2        1.6836227 #> 3    3        0.6628264 #> 4    4        1.4940648 #> 5    5        2.6325313 #> 6    6        3.0806597 fb_map_site_data(site_locations, site_mat, \"annual_mean_temp\") +   labs(title = \"Mean Annual Temperature per Site\")"},{"path":"https://frbcesab.github.io/funbiogeo/articles/funbiogeo.html","id":"map-of-functional-diversity-indices","dir":"Articles","previous_headings":"Putting variables on the map","what":"Map of functional diversity indices","title":"Get started with funbiogeo","text":"can leverage functions map functional diversity indices. example, body mass CWM:  can similarly functional richness:","code":"body_mass_cwm <- subset(cwm, trait == \"adult_body_mass\")  fb_map_site_data(site_locations, body_mass_cwm, \"cwm\") +   scale_fill_viridis_c(trans = \"log10\") +   labs(title = \"Mammals Body Mass CWM\") fb_map_site_data(site_locations, fric, \"FRic\") +   scale_fill_viridis_c(option = \"magma\") +   labs(title = \"Mammals Functional Richness\")"},{"path":"https://frbcesab.github.io/funbiogeo/articles/funbiogeo.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Get started with funbiogeo","text":"concludes tutorial introduce funbiogeo. packages contains many features, especially diagnostic plots, explained detail dedicated vignette. also specific vignette transforming raw data long wide format. Finally, ’re interested learning -scaling sites, can refer specific vignette","code":""},{"path":[]},{"path":"https://frbcesab.github.io/funbiogeo/articles/long-format.html","id":"wide-vs-long-format","dir":"Articles","previous_headings":"","what":"Wide vs long format","title":"Formatting your data","text":"funbiogeo datasets must wide format (one row hosts several variables across columns), sometimes information structured long format (one observation per row, also called tidy format). instance, following dataset illustrates wider format (presence/absence species spread across columns). Wide format dataset (used funbiogeo) following dataset illustrates long format (column species contains name species column occurrence contains presence/absence species). Long format dataset","code":""},{"path":"https://frbcesab.github.io/funbiogeo/articles/long-format.html","id":"the-fb_format_-functions","dir":"Articles","previous_headings":"","what":"The fb_format_*() functions","title":"Formatting your data","text":"data split wider datasets, can use functions fb_format_*() create specific objects long format dataset. fb_format_site_locations() allows extract site x locations information long format data fb_format_site_species() allows extract site x species information long format data fb_format_species_traits() allows extract species x traits information long format data fb_format_species_categories() allows extract species x categories information long format data functions take long dataset input (argument data), one row corresponds occurrence/abundance/coverage one species one site output wider object.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/articles/long-format.html","id":"usage","dir":"Articles","previous_headings":"","what":"Usage","title":"Formatting your data","text":"funbiogeo provides small excerpt long format data show use functions. data sits system.file(\"extdata\", \"raw_mammals_data.csv\", package = \"funbiogeo\"). Let’s import long format dataset provided funbiogeo: Long table example","code":"# Define the path to long format dataset ---- file_name <- system.file(\"extdata\", \"raw_mammals_data.csv\", package = \"funbiogeo\")   # Read the file ---- all_data <- read.csv(file_name)"},{"path":"https://frbcesab.github.io/funbiogeo/articles/long-format.html","id":"extracting-species-x-traits-data","dir":"Articles","previous_headings":"Usage","what":"Extracting species x traits data","title":"Formatting your data","text":"function fb_format_species_traits() extracts species traits values long table create species x traits dataset. Note one species must one unique trait value (trait variation across sites allowed).","code":"# Extract species x traits data ---- species_traits <- fb_format_species_traits(   data    = all_data,    species = \"species\",    traits  = c(\"adult_body_mass\", \"gestation_length\", \"litter_size\",               \"max_longevity\", \"sexual_maturity_age\", \"diet_breadth\") )  # Preview ---- head(species_traits, 10) #>    species adult_body_mass gestation_length litter_size max_longevity #> 1   sp_001       461900.76           235.00        1.25         324.0 #> 2   sp_002           21.11            19.89        5.64          48.0 #> 3   sp_005           31.60            24.50        4.94          48.0 #> 4   sp_006           21.90            23.68        5.16          52.8 #> 5   sp_010            8.31               NA        1.73         252.0 #> 6   sp_013        31756.51            63.50        4.98         354.0 #> 7   sp_016        22502.01           196.00        1.79         204.0 #> 8   sp_017       240867.13           235.61        1.09         321.6 #> 9   sp_022            9.89            29.00        4.04          38.4 #> 10  sp_026        57224.61           230.00        1.00         300.0 #>    sexual_maturity_age diet_breadth #> 1               668.20            1 #> 2                76.04           NA #> 3                43.27           NA #> 4                57.93            4 #> 5                   NA            1 #> 6               679.37            1 #> 7               400.97           NA #> 8               659.91            5 #> 9                66.88            2 #> 10              543.28            2"},{"path":"https://frbcesab.github.io/funbiogeo/articles/long-format.html","id":"extracting-site-x-species-data","dir":"Articles","previous_headings":"Usage","what":"Extracting site x species data","title":"Formatting your data","text":"function fb_format_site_species() extracts species occurrence/abundance/coverage long table create site x species dataset. Note one species must observed one time one site (package funbiogeo yet consider temporal survey).","code":"# Format site x species data ---- site_species <- fb_format_site_species(data       = all_data,                                         site       = \"site\",                                         species    = \"species\",                                         value      = \"count\",                                        na_to_zero = TRUE )  # Preview ---- head(site_species[ , 1:8], 10) #>       site sp_001 sp_002 sp_005 sp_006 sp_010 sp_013 sp_016 #> 1   fb_103      1      0      0      1      0      1      1 #> 2  fb_1001      1      1      1      1      1      1      1 #> 3   fb_102      1      0      0      1      0      1      1 #> 4   fb_104      1      0      0      1      0      1      1 #> 5   fb_101      1      0      0      1      0      1      1 #> 6  fb_1000      1      1      1      1      1      1      1 #> 7  fb_1002      1      1      1      1      1      1      1 #> 8  fb_1022      0      0      1      1      1      0      1 #> 9  fb_1018      0      0      1      1      1      0      0 #> 10 fb_1024      0      0      1      1      1      0      1"},{"path":"https://frbcesab.github.io/funbiogeo/articles/long-format.html","id":"extracting-site-x-locations-data","dir":"Articles","previous_headings":"Usage","what":"Extracting site x locations data","title":"Formatting your data","text":"function fb_format_site_locations() extracts sites coordinates long table create site x locations dataset. Note one site must one unique longitude x latitude value.","code":"# Format site x locations data ---- site_locations <- fb_format_site_locations(data       =  all_data,                                             site       = \"site\",                                             longitude  = \"longitude\",                                             latitude   = \"latitude\",                                            na_rm      = FALSE)  # Preview ---- head(site_locations) #> Simple feature collection with 6 features and 1 field #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 52.59736 ymin: 6.271821 xmax: 59.09736 ymax: 20.77182 #> Geodetic CRS:  WGS 84 #>      site                  geometry #> 1  fb_103 POINT (59.09736 7.271821) #> 2 fb_1001 POINT (52.59736 20.77182) #> 3  fb_102 POINT (59.09736 6.771821) #> 4  fb_104 POINT (59.09736 7.771821) #> 5  fb_101 POINT (59.09736 6.271821) #> 6 fb_1000 POINT (52.59736 20.27182)"},{"path":"https://frbcesab.github.io/funbiogeo/articles/long-format.html","id":"extracting-species-x-categories-data","dir":"Articles","previous_headings":"Usage","what":"Extracting species x categories data","title":"Formatting your data","text":"function fb_format_species_categories() extracts species values one supra-category (optional) long table create species x categories dataset. category (e.g. order, family, endemism status, conservation status, etc.) can later several functions funbiogeo aggregate metrics level. data good format, can get started funbiogeo.","code":"# Extract species x categories data ---- species_categories <- fb_format_species_categories(data     = all_data,                                                     species  = \"species\",                                                    category = \"order\" )  # Preview ---- head(species_categories, 10) #>     species           order #> 1    sp_001 Cetartiodactyla #> 8    sp_002        Rodentia #> 11   sp_005        Rodentia #> 27   sp_006        Rodentia #> 59   sp_010      Chiroptera #> 81   sp_013       Carnivora #> 89   sp_016 Cetartiodactyla #> 113  sp_017 Cetartiodactyla #> 132  sp_022    Eulipotyphla #> 138  sp_026 Cetartiodactyla"},{"path":"https://frbcesab.github.io/funbiogeo/articles/upscaling.html","id":"aggregating-arbitrary-site-data","dir":"Articles","previous_headings":"","what":"Aggregating arbitrary site-data","title":"Upscaling your data","text":"Let’s import site locations object, describes geographical locations sites. sites collection regular spatial polygons resolution 0.5° Western Europe. site, want compute species richness. going let’s map original values function fb_map_site_data().  Now, let’s say next analyses require work coarser resolution. need aggregate site data new spatial grid (object SpatRaster terra package). Let’s import coarser raster. aggregate site data (resolution 0.5°) new coarser raster (resolution 0.83°) function fb_aggregate_site_data(). function requires following arguments: site_locations: site x locations object site_data: matrix data.frame containing values per sites aggregate provided grid agg_grid. Can one several columns (variables aggregate). first column must contain sites names provided example dataset site_locations agg_grid: SpatRaster object (package terra). raster one single layer, defines grid along aggregate fun: function used aggregate sites values multiple sites one cell Let’s aggregate species richness values grid. result function SpatRaster cells contain average values species richness aggregated coarser grid.","code":"library(\"funbiogeo\") data(\"site_locations\")  site_locations #> Simple feature collection with 1505 features and 1 field #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -9.978179 ymin: 35.84736 xmax: 23.02182 ymax: 59.84736 #> Geodetic CRS:  WGS 84 #> First 10 features: #>    site                           geom #> 1     1 POLYGON ((5.521821 59.84736... #> 2     2 POLYGON ((6.521821 59.84736... #> 3     3 POLYGON ((7.021821 59.84736... #> 4     4 POLYGON ((7.521821 59.84736... #> 5     5 POLYGON ((8.021821 59.84736... #> 6     6 POLYGON ((8.521821 59.84736... #> 7     7 POLYGON ((9.021821 59.84736... #> 8     8 POLYGON ((9.521821 59.84736... #> 9     9 POLYGON ((10.02182 59.84736... #> 10   10 POLYGON ((10.52182 59.84736... # Import site x species data ---- data(\"site_species\")  # Compute species richness ---- species_richness <- fb_count_species_by_site(site_species)  head(species_richness) #>   site n_species  coverage #> 1  980        68 0.4563758 #> 2 1022        68 0.4563758 #> 3  931        67 0.4496644 #> 4  975        67 0.4496644 #> 5  933        66 0.4429530 #> 6  966        66 0.4429530 fb_map_site_data(site_locations, species_richness, \"n_species\") # Import study area grid ---- coarser_grid <- system.file(\"extdata\", \"grid_area.tif\", package = \"funbiogeo\") coarser_grid <- terra::rast(coarser_grid)  coarser_grid #> class       : SpatRaster  #> dimensions  : 29, 41, 1  (nrow, ncol, nlyr) #> resolution  : 0.8333333, 0.8333333  (x, y) #> extent      : -10.5, 23.66667, 35.83333, 60  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (EPSG:4326)  #> source      : grid_area.tif  #> name        : value  #> min value   :     1  #> max value   :     1 # Upscale to grid ---- upscaled_richness <- fb_aggregate_site_data(   site_locations = site_locations,   site_data      = species_richness[ , 1:2],   agg_grid       = coarser_grid,   fun            = mean )  upscaled_richness #> class       : SpatRaster  #> dimensions  : 29, 41, 1  (nrow, ncol, nlyr) #> resolution  : 0.8333333, 0.8333333  (x, y) #> extent      : -10.5, 23.66667, 35.83333, 60  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (EPSG:4326)  #> source(s)   : memory #> varname     : grid_area  #> name        : n_species  #> min value   :         3  #> max value   :        68 fb_map_raster(upscaled_richness)"},{"path":"https://frbcesab.github.io/funbiogeo/articles/upscaling.html","id":"aggregating-site-species-data-to-a-coarser-spatial-scale","dir":"Articles","previous_headings":"","what":"Aggregating site-species data to a coarser spatial scale","title":"Upscaling your data","text":"Now ’ve learned aggregate arbitrary data site scale spatial scale. ’re going use provided example named site_species Western European mammals resolution 0.5° get new sites grid pixels 0.83° resolution. shown part , ’ll need three objects: site_species, describes species present across sites; site_locations, gives spatial locations sites; agg_grid SpatRaster object defining coarser grid. ’ll use previously defined object run example. aggregate presence-absence species within pixel new grid, ’ll use max() function (fun argument). , coarser pixels contains mix presence absence certain species, ’ll considered species present. return object SpatRaster well can transformed easily data.frame follow back regular analyses provided funbiogeo. new object contains one layer aggregated variable, .e. , one per species. can visualize maps single species see difference:","code":"site_species_agg <- fb_aggregate_site_data(   site_locations,   site_species,   agg_grid = coarser_grid,   fun = max ) site_species_agg #> class       : SpatRaster  #> dimensions  : 29, 41, 149  (nrow, ncol, nlyr) #> resolution  : 0.8333333, 0.8333333  (x, y) #> extent      : -10.5, 23.66667, 35.83333, 60  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (EPSG:4326)  #> source(s)   : memory #> varnames    : grid_area  #>               grid_area  #>               grid_area  #>               ... #> names       : sp_001, sp_002, sp_003, sp_004, sp_005, sp_006, ...  #> min values  :      0,      0,      0,      0,      0,      0, ...  #> max values  :      1,      1,      1,      0,      1,      1, ... library(\"ggplot2\")  single_species <- merge(   site_locations, site_species[, 1:2], by = \"site\", all = TRUE )  finer_map <- ggplot(single_species) +   geom_sf(aes(fill = as.factor(sp_001))) +   labs(fill = \"Presence of sp_001\", title = \"Original resolution (0.5°)\")  coarser_map <- fb_map_raster(site_species_agg[[1]]) +   scale_fill_binned(breaks = c(0, 0.5, 1)) +   labs(title = \"Coarser resolution (0.83°)\")  patchwork::wrap_plots(finer_map, coarser_map, nrow = 1)"},{"path":"https://frbcesab.github.io/funbiogeo/articles/upscaling.html","id":"obtaining-back-a-site-x-species-data-frame","dir":"Articles","previous_headings":"Aggregating site-species data to a coarser spatial scale","what":"Obtaining back a site x species data.frame","title":"Upscaling your data","text":"Now obtained raster aggregated site-species presences. However, functions funbiogeo don’t play well raster data. need data.frames work well. can specific function .data.frame() terra (make sure check dedicated help page specifies additional arguments ?terra::.data.frame). , ’re ready reuse funbiogeo functions work coarser data. can proceed similarly aggregate ancillary site-related data, use rest analyses.","code":"# Use the 'cells = TRUE' argument to index results with a new cell column # corresponding to the ID of the coarser grid pixels site_species_agg_df <- terra::as.data.frame(site_species_agg, cells = TRUE)  site_species_agg_df[1:4, 1:4] #>    cell sp_001 sp_002 sp_003 #> 20   20      1      0      0 #> 21   21      1      0      0 #> 22   22      1      0      0 #> 23   23      1      0      0  colnames(site_species_agg_df)[1] <- \"site\""},{"path":"https://frbcesab.github.io/funbiogeo/articles/upscaling.html","id":"aggregating-site-functional-diversity-data","dir":"Articles","previous_headings":"","what":"Aggregating site-functional diversity data","title":"Upscaling your data","text":"funbiogeo focuses functional biogeography workflow, ’ll explore section aggregate results functional biogeography function. First, ’ll show example CWM body mass ’ll show example functional diversity using fundiversity package.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/articles/upscaling.html","id":"coarser-cwm-of-body-mass","dir":"Articles","previous_headings":"Aggregating site-functional diversity data","what":"Coarser CWM of body mass","title":"Upscaling your data","text":"compute CWM ’ll use internal function fb_cwm(). Now can aggregate CWM body mass coarser scale using fb_aggregate_site_data() done previous section: can map CWM using fb_map_raster() function:","code":"site_cwm <- fb_cwm(site_species, species_traits[, 1:2]) #> Some species had NA trait values, removing them from CWM computation  head(site_cwm) #>   site           trait      cwm #> 1    1 adult_body_mass 31974.15 #> 2    2 adult_body_mass 39911.51 #> 3    3 adult_body_mass 39912.54 #> 4    4 adult_body_mass 39912.54 #> 5    5 adult_body_mass 41389.44 #> 6    6 adult_body_mass 39912.37 colnames(site_cwm)[3] <- \"adult_body_mass\"  upscaled_cwm <- fb_aggregate_site_data(   site_locations,   site_cwm[, c(1, 3)],   coarser_grid )  upscaled_cwm #> class       : SpatRaster  #> dimensions  : 29, 41, 1  (nrow, ncol, nlyr) #> resolution  : 0.8333333, 0.8333333  (x, y) #> extent      : -10.5, 23.66667, 35.83333, 60  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (EPSG:4326)  #> source(s)   : memory #> varname     : grid_area  #> name        : adult_body_mass  #> min value   :        27.83333  #> max value   :     41389.43359 fb_map_raster(upscaled_cwm) +   scale_fill_continuous(trans = \"log10\")"},{"path":"https://frbcesab.github.io/funbiogeo/articles/upscaling.html","id":"coarser-fric-through-fundiversity","dir":"Articles","previous_headings":"Aggregating site-functional diversity data","what":"Coarser FRic through fundiversity","title":"Upscaling your data","text":"similar fashion introduction vignette funbiogeo section ’ll compute Functional Richness using two traits across example dataset. can now follow similar upscaling process previous sections","code":"# Get all species for which we have both adult body mass and litter size subset_traits <- species_traits[   , c(\"species\", \"adult_body_mass\", \"litter_size\") ] subset_traits <- subset(   subset_traits, !is.na(adult_body_mass) & !is.na(litter_size) )  # Transform trait data subset_traits[[\"adult_body_mass\"]] <- as.numeric(   scale(log10(subset_traits[[\"adult_body_mass\"]])) )  subset_traits[[\"litter_size\"]] <- as.numeric(   scale(subset_traits[[\"litter_size\"]]) )  # Filter site for which we have trait information for than 80% of species subset_site <- fb_filter_sites_by_trait_coverage(   site_species, subset_traits, 0.8 ) subset_site <- subset_site[, c(\"site\", subset_traits$species)]  # Remove first column and convert in rownames rownames(subset_traits) <- subset_traits[[\"species\"]] subset_traits <- subset_traits[, -1] rownames(subset_site) <- subset_site[[\"site\"]] subset_site <- subset_site[, -1]  # Compute FRic site_fric <- fundiversity::fd_fric(   subset_traits, subset_site ) #> Warning in fundiversity::fd_fric(subset_traits, subset_site): Some sites had #> less species than traits so returned FRic is 'NA'  head(site_fric) #>   site     FRic #> 1    1 8.502155 #> 2    2 8.502155 #> 3    3 8.502155 #> 4    4 8.502155 #> 5    5 8.502155 #> 6    6 8.502155 agg_fric <- fb_aggregate_site_data(site_locations, site_fric, coarser_grid)  fb_map_raster(agg_fric)"},{"path":"https://frbcesab.github.io/funbiogeo/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Nicolas Casajus. Author, maintainer, copyright holder. Matthias Grenié. Author.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Casajus N, Grenié M (2024). funbiogeo: Functional Biogeography Analyses. R package version 0.0.0.9000, https://github.com/frbcesab/funbiogeo, https://frbcesab.github.io/funbiogeo/.","code":"@Manual{,   title = {funbiogeo: Functional Biogeography Analyses},   author = {Nicolas Casajus and Matthias Grenié},   year = {2024},   note = {R package version 0.0.0.9000, https://github.com/frbcesab/funbiogeo},   url = {https://frbcesab.github.io/funbiogeo/}, }"},{"path":"https://frbcesab.github.io/funbiogeo/index.html","id":"funbiogeo-","dir":"","previous_headings":"","what":"Functional Biogeography Analyses","title":"Functional Biogeography Analyses","text":"• Overview • Features • Installation • First steps • Long-form documentations • Citation • Contributing • Acknowledgments • References","code":""},{"path":"https://frbcesab.github.io/funbiogeo/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Functional Biogeography Analyses","text":"package funbiogeo aims help users analyses functional biogeography (Violle et al. 2014) loading combining data, computing trait coverage, well computing functional diversity indices, drawing maps, correlating environment, upscaling assemblages. aimed first-timers functional biogeography well experienced users want obtain quick easy exploratory plots.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/index.html","id":"features","dir":"","previous_headings":"","what":"Features","title":"Functional Biogeography Analyses","text":"funbiogeo offers: Standardized functions filter select data analyses, Pleasing default diagnostic plots visualize structure data, Extensive documentation (multiple vignettes, well-documented functions, real-life example dataset) guide functional biogeography analyses, Nice default plotting functions using outputs functional diversity packages (betapart, fundiversity, hillR, mFD, etc.), Automated standardized report provide analyses plots data, Functions easily “upscale” data coarser spatial resolutions.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Functional Biogeography Analyses","text":"moment funbiogeo CRAN can install development version GitHub follow:","code":"# install.packages(\"remotes\")  # Run this line if 'remotes' pkg is not installed remotes::install_github(\"FRBCesab/funbiogeo\")"},{"path":"https://frbcesab.github.io/funbiogeo/index.html","id":"first-steps","dir":"","previous_headings":"","what":"First steps","title":"Functional Biogeography Analyses","text":"section show useful functions funbiogeo. longer introduction please refer “Get started” vignette. package contains default example data named species_traits, site_species, site_locations. can example visualize completeness trait dataset using fb_plot_species_traits_completeness() function:  One useful visualization see trait coverage trait across sites, using function fb_map_site_traits_completeness():  See features funbiogeo vignettes package","code":"fb_plot_species_traits_completeness(species_traits) fb_map_site_traits_completeness(site_locations, site_species, species_traits)"},{"path":"https://frbcesab.github.io/funbiogeo/index.html","id":"long-form-documentations","dir":"","previous_headings":"","what":"Long-form documentations","title":"Functional Biogeography Analyses","text":"funbiogeo provides four vignettes explain functioning: “Get started” vignette describes core features guide typical analysis. vignette diagnostic plots provided package, details use plotting function interpret output. vignette formatting data needs funbiogeo, shows use specific functions. specific vignette upscaling explains aggregate automatically data coarser grain use analyses.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Functional Biogeography Analyses","text":"moment funbiogeo doesn’t offer companion paper. happen use paper can cite package : Casajus N & Grenié M (2024). funbiogeo: Functional Biogeography Analyses. R package version 0.0.0.9000, https://github.com/frbcesab/funbiogeo. can also run:","code":"citation(\"funbiogeo\")"},{"path":"https://frbcesab.github.io/funbiogeo/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Functional Biogeography Analyses","text":"types contributions encouraged valued. information, check Contributor Guidelines. Please note funbiogeo project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/index.html","id":"acknowledgments","dir":"","previous_headings":"","what":"Acknowledgments","title":"Functional Biogeography Analyses","text":"package developed FRB-CESAB working group FREE aims advance concept functional rarity examine causes consequences functional rarity local global scales.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Functional Biogeography Analyses","text":"Violle C, Reich, PB Pacala SW, et al. (2014) emergence promise functional biogeography. Proceedings National Academy Sciences, 111, 13690–13696. DOI: 10.1073/pnas.1415442111","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_aggregate_site_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate Site Data Along Coarser Spatial Grid — fb_aggregate_site_data","title":"Aggregate Site Data Along Coarser Spatial Grid — fb_aggregate_site_data","text":"function helps aggregating site data along coarser grid. idea type data site scale (diversity metrics, environmental data, etc.) like work coarser scale, want visualize scale. function helps exactly .","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_aggregate_site_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate Site Data Along Coarser Spatial Grid — fb_aggregate_site_data","text":"","code":"fb_aggregate_site_data(site_locations, site_data, agg_grid, fun = mean)"},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_aggregate_site_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregate Site Data Along Coarser Spatial Grid — fb_aggregate_site_data","text":"site_locations sf object spatial geometries sites. NOTE: first column named \"site\" indicate site names. site_data matrix data.frame containing values per sites aggregate along provided grid. Can one several columns (variables aggregate). first column must contain sites names provided example dataset site_locations. agg_grid SpatRaster object (package terra). raster one single layer, defines grid along aggregate. fun function used aggregate points values multiple points one cell. Default mean.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_aggregate_site_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregate Site Data Along Coarser Spatial Grid — fb_aggregate_site_data","text":"SpatRaster object many layers columns site_data.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_aggregate_site_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Aggregate Site Data Along Coarser Spatial Grid — fb_aggregate_site_data","text":"","code":"library(\"funbiogeo\")  data(\"site_locations\") data(\"site_species\")  ## Import grid ---- tavg <- system.file(\"extdata\", \"annual_mean_temp.tif\", package = \"funbiogeo\") tavg <- terra::rast(tavg)  ## Rasterize 3 first species counts ---- fb_aggregate_site_data(site_locations, site_species[, 1:4], tavg, fun = sum) #> class       : SpatRaster  #> dimensions  : 290, 405, 3  (nrow, ncol, nlyr) #> resolution  : 0.08333333, 0.08333333  (x, y) #> extent      : -10.5, 23.25, 35.83333, 60  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (EPSG:4326)  #> source(s)   : memory #> varnames    : annual_mean_temp  #>               annual_mean_temp  #>               annual_mean_temp  #> names       : sp_001, sp_002, sp_003  #> min values  :      0,      0,      0  #> max values  :      1,      1,      1"},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_count_sites_by_species.html","id":null,"dir":"Reference","previous_headings":"","what":"Count Number of Sites Occupied by Species — fb_count_sites_by_species","title":"Count Number of Sites Occupied by Species — fb_count_sites_by_species","text":"species computes percentage sites species present (distribution value higher 0 non-NA).","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_count_sites_by_species.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count Number of Sites Occupied by Species — fb_count_sites_by_species","text":"","code":"fb_count_sites_by_species(site_species)"},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_count_sites_by_species.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count Number of Sites Occupied by Species — fb_count_sites_by_species","text":"site_species data.frame sites rows species columns. NOTE: first column named \"site\" indicate site names. columns named according species names.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_count_sites_by_species.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count Number of Sites Occupied by Species — fb_count_sites_by_species","text":"three-column data.frame : species: name species; n_sites: number sites species present; coverage: percentage sites species present.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_count_sites_by_species.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Count Number of Sites Occupied by Species — fb_count_sites_by_species","text":"","code":"library(\"funbiogeo\")  data(\"site_species\")  site_coverage_by_species <- fb_count_sites_by_species(site_species) head(site_coverage_by_species) #>   species n_sites  coverage #> 1  sp_078    1499 0.9960133 #> 2  sp_006    1482 0.9847176 #> 3  sp_119    1476 0.9807309 #> 4  sp_149    1475 0.9800664 #> 5  sp_057    1449 0.9627907 #> 6  sp_084    1426 0.9475083"},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_count_species_by_site.html","id":null,"dir":"Reference","previous_headings":"","what":"Count Number of Species per Site — fb_count_species_by_site","title":"Count Number of Species per Site — fb_count_species_by_site","text":"site computes proportion species present (distribution value higher 0 non-NA) compared species provided. example, site contain 20% species provided.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_count_species_by_site.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count Number of Species per Site — fb_count_species_by_site","text":"","code":"fb_count_species_by_site(site_species)"},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_count_species_by_site.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count Number of Species per Site — fb_count_species_by_site","text":"site_species data.frame sites rows species columns. NOTE: first column named \"site\" indicate site names. columns named according species names.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_count_species_by_site.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count Number of Species per Site — fb_count_species_by_site","text":"three-column data.frame : site: name site; n_species: number present species; coverage: percentage present species.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_count_species_by_site.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Count Number of Species per Site — fb_count_species_by_site","text":"","code":"library(\"funbiogeo\")  data(\"site_species\")  species_coverage_by_site <- fb_count_species_by_site(site_species) head(species_coverage_by_site) #>   site n_species  coverage #> 1  980        68 0.4563758 #> 2 1022        68 0.4563758 #> 3  931        67 0.4496644 #> 4  975        67 0.4496644 #> 5  933        66 0.4429530 #> 6  966        66 0.4429530"},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_count_species_by_trait.html","id":null,"dir":"Reference","previous_headings":"","what":"Count Number of Species for Each Trait — fb_count_species_by_trait","title":"Count Number of Species for Each Trait — fb_count_species_by_trait","text":"trait computes percentage species without NA (missing trait values).","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_count_species_by_trait.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count Number of Species for Each Trait — fb_count_species_by_trait","text":"","code":"fb_count_species_by_trait(species_traits)"},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_count_species_by_trait.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count Number of Species for Each Trait — fb_count_species_by_trait","text":"species_traits data.frame species rows traits columns. NOTE: first column named \"species\" contain species names. columns named according trait names.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_count_species_by_trait.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count Number of Species for Each Trait — fb_count_species_by_trait","text":"three-column data.frame : trait: name trait; n_species: number species non-missing value trait; coverage: percentage species non-missing value trait.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_count_species_by_trait.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Count Number of Species for Each Trait — fb_count_species_by_trait","text":"","code":"library(\"funbiogeo\")  data(\"species_traits\")  species_coverage_by_trait <- fb_count_species_by_trait(species_traits) head(species_coverage_by_trait) #>                 trait n_species  coverage #> 1     adult_body_mass       123 0.8255034 #> 2         litter_size       114 0.7651007 #> 3    gestation_length        88 0.5906040 #> 4 sexual_maturity_age        84 0.5637584 #> 5        diet_breadth        83 0.5570470 #> 6       max_longevity        81 0.5436242"},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_count_traits_by_species.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Number of Known Trait(s) per Species — fb_count_traits_by_species","title":"Compute Number of Known Trait(s) per Species — fb_count_traits_by_species","text":"species computes percentage traits without NA (missing trait values).","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_count_traits_by_species.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Number of Known Trait(s) per Species — fb_count_traits_by_species","text":"","code":"fb_count_traits_by_species(species_traits)"},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_count_traits_by_species.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Number of Known Trait(s) per Species — fb_count_traits_by_species","text":"species_traits data.frame species rows traits columns. NOTE: first column named \"species\" contain species names. columns named according trait names.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_count_traits_by_species.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Number of Known Trait(s) per Species — fb_count_traits_by_species","text":"three-column data.frame : species: name species; n_traits: number traits non-missing value species; coverage: percentage traits non-missing value species.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_count_traits_by_species.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Number of Known Trait(s) per Species — fb_count_traits_by_species","text":"","code":"library(\"funbiogeo\")  data(\"species_traits\")  trait_coverage_by_species <- fb_count_traits_by_species(species_traits) head(trait_coverage_by_species) #>   species n_traits coverage #> 1  sp_001        6        1 #> 2  sp_006        6        1 #> 3  sp_011        6        1 #> 4  sp_012        6        1 #> 5  sp_013        6        1 #> 6  sp_014        6        1"},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_cwm.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute community-weighted means (CWM) of trait values — fb_cwm","title":"Compute community-weighted means (CWM) of trait values — fb_cwm","text":"function returns community-weighted mean provided trait values. works quantitative traits warn otherwise. remove species either NA values site_species input NA values trait.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_cwm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute community-weighted means (CWM) of trait values — fb_cwm","text":"","code":"fb_cwm(site_species, species_traits)"},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_cwm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute community-weighted means (CWM) of trait values — fb_cwm","text":"site_species data.frame sites rows species columns. NOTE: first column named \"site\" indicate site names. columns named according species names. species_traits data.frame species rows traits columns. NOTE: first column named \"species\" contain species names. columns named according trait names.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_cwm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute community-weighted means (CWM) of trait values — fb_cwm","text":"data.frame sites rows following variables: site, site label, trait, trait label provided species_traits, cwm, community-weighted means quantitative traits values.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_cwm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute community-weighted means (CWM) of trait values — fb_cwm","text":"","code":"library(\"funbiogeo\")  data(\"site_species\") data(\"species_traits\")  site_cwm <- fb_cwm(head(site_species), species_traits) #> Some species had NA trait values, removing them from CWM computation head(site_cwm) #>   site           trait      cwm #> 1    1 adult_body_mass 31974.15 #> 2    2 adult_body_mass 39911.51 #> 3    3 adult_body_mass 39912.54 #> 4    4 adult_body_mass 39912.54 #> 5    5 adult_body_mass 41389.44 #> 6    6 adult_body_mass 39912.37"},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_filter_sites_by_species_coverage.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter sites with a given species coverage threshold — fb_filter_sites_by_species_coverage","title":"Filter sites with a given species coverage threshold — fb_filter_sites_by_species_coverage","text":"Selects sites (rows) percentage present species (distribution value higher 0 non-NA) higher threshold.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_filter_sites_by_species_coverage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter sites with a given species coverage threshold — fb_filter_sites_by_species_coverage","text":"","code":"fb_filter_sites_by_species_coverage(   site_species,   threshold_species_proportion = 0 )"},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_filter_sites_by_species_coverage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter sites with a given species coverage threshold — fb_filter_sites_by_species_coverage","text":"site_species data.frame sites rows species columns. NOTE: first column named \"site\" indicate site names. columns named according species names. threshold_species_proportion numeric length 1 0 1. percentage species coverage threshold.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_filter_sites_by_species_coverage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter sites with a given species coverage threshold — fb_filter_sites_by_species_coverage","text":"subset site_species sites covered X% species.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_filter_sites_by_species_coverage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter sites with a given species coverage threshold — fb_filter_sites_by_species_coverage","text":"","code":"library(\"funbiogeo\")  data(\"site_species\")  # Get sites with more than 40% of the species new_site_species <- fb_filter_sites_by_species_coverage(   site_species,   threshold_species_proportion = 0.4 ) # There are now only 148 sites dim(new_site_species) #> [1] 148 150 new_site_species[1:3, 1:4] #>     site sp_001 sp_002 sp_003 #> 673  673      0      1      0 #> 674  674      0      1      0 #> 675  675      0      1      0"},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_filter_sites_by_trait_coverage.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter sites with a given trait coverage threshold — fb_filter_sites_by_trait_coverage","title":"Filter sites with a given trait coverage threshold — fb_filter_sites_by_trait_coverage","text":"...","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_filter_sites_by_trait_coverage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter sites with a given trait coverage threshold — fb_filter_sites_by_trait_coverage","text":"","code":"fb_filter_sites_by_trait_coverage(   site_species,   species_traits,   threshold_traits_proportion = 1 )"},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_filter_sites_by_trait_coverage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter sites with a given trait coverage threshold — fb_filter_sites_by_trait_coverage","text":"site_species data.frame sites rows species columns. NOTE: first column named \"site\" indicate site names. columns named according species names. species_traits data.frame species rows traits columns. NOTE: first column named \"species\" contain species names. columns named according trait names. threshold_traits_proportion numeric length 1 0 1. percentage trait coverage threshold","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_filter_sites_by_trait_coverage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter sites with a given trait coverage threshold — fb_filter_sites_by_trait_coverage","text":"subset site_species sites covered X% abundance/coverage considering provided traits.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_filter_sites_by_trait_coverage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter sites with a given trait coverage threshold — fb_filter_sites_by_trait_coverage","text":"","code":"library(\"funbiogeo\")  data(\"site_species\") data(\"species_traits\")  # Filter all the sites where all species have known traits new_site_species <- fb_filter_sites_by_trait_coverage(   site_species, species_traits )  # There is only one such site nrow(new_site_species) #> [1] 1  # Filter sites where at least 80% of species have known traits new_site_species_2 <- fb_filter_sites_by_trait_coverage(   site_species, species_traits, threshold_traits_proportion = 0.8 )  # There are now four sites nrow(new_site_species_2) #> [1] 4"},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_filter_species_by_site_coverage.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter species with a given sites coverage threshold — fb_filter_species_by_site_coverage","title":"Filter species with a given sites coverage threshold — fb_filter_species_by_site_coverage","text":"Selects species (columns) percentage sites species present (distribution value higher 0 non-NA) higher threshold.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_filter_species_by_site_coverage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter species with a given sites coverage threshold — fb_filter_species_by_site_coverage","text":"","code":"fb_filter_species_by_site_coverage(   site_species,   threshold_sites_proportion = 0 )"},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_filter_species_by_site_coverage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter species with a given sites coverage threshold — fb_filter_species_by_site_coverage","text":"site_species data.frame sites rows species columns. NOTE: first column named \"site\" indicate site names. columns named according species names. threshold_sites_proportion numeric length 1 0 1. percentage sites coverage threshold.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_filter_species_by_site_coverage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter species with a given sites coverage threshold — fb_filter_species_by_site_coverage","text":"subset site_species species prevalence higher threshold_sites_proportion.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_filter_species_by_site_coverage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter species with a given sites coverage threshold — fb_filter_species_by_site_coverage","text":"","code":"library(\"funbiogeo\")  data(\"site_species\")  # Filter species present in at least 10% of the sites new_site_species <- fb_filter_species_by_site_coverage(   site_species,   threshold_sites_proportion = 0.1 )  new_site_species[1:3, 1:4] #>   site sp_078 sp_006 sp_119 #> 1    1      1      1      1 #> 2    2      1      1      1 #> 3    3      1      1      1  # There are now only 84 species (instead of 149) ncol(new_site_species) #> [1] 84"},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_filter_species_by_trait_coverage.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter species with a given traits coverage threshold — fb_filter_species_by_trait_coverage","title":"Filter species with a given traits coverage threshold — fb_filter_species_by_trait_coverage","text":"Selects species (rows) percentage traits without NA (missing trait values) higher threshold.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_filter_species_by_trait_coverage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter species with a given traits coverage threshold — fb_filter_species_by_trait_coverage","text":"","code":"fb_filter_species_by_trait_coverage(   species_traits,   threshold_traits_proportion = 0 )"},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_filter_species_by_trait_coverage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter species with a given traits coverage threshold — fb_filter_species_by_trait_coverage","text":"species_traits data.frame species rows traits columns. NOTE: first column named \"species\" contain species names. columns named according trait names. threshold_traits_proportion numeric length 1 0 1. percentage traits coverage threshold.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_filter_species_by_trait_coverage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter species with a given traits coverage threshold — fb_filter_species_by_trait_coverage","text":"subset species_traits species covered X% traits.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_filter_species_by_trait_coverage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter species with a given traits coverage threshold — fb_filter_species_by_trait_coverage","text":"","code":"library(\"funbiogeo\")  data(\"species_traits\")  # Filter species that have at least 60% of the traits described new_species_traits <- fb_filter_species_by_trait_coverage(   species_traits,   threshold_traits_proportion = 0.6 )  # There are now only 93 species nrow(new_species_traits) #> [1] 93"},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_filter_traits_by_species_coverage.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter traits with a given species coverage threshold — fb_filter_traits_by_species_coverage","title":"Filter traits with a given species coverage threshold — fb_filter_traits_by_species_coverage","text":"Selects traits (columns) percentage species without NA (missing trait values) higher threshold.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_filter_traits_by_species_coverage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter traits with a given species coverage threshold — fb_filter_traits_by_species_coverage","text":"","code":"fb_filter_traits_by_species_coverage(   species_traits,   threshold_species_proportion = 0 )"},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_filter_traits_by_species_coverage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter traits with a given species coverage threshold — fb_filter_traits_by_species_coverage","text":"species_traits data.frame species rows traits columns. NOTE: first column named \"species\" contain species names. columns named according trait names. threshold_species_proportion numeric(1) [default = NULL] 0 1. percentage species coverage threshold.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_filter_traits_by_species_coverage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter traits with a given species coverage threshold — fb_filter_traits_by_species_coverage","text":"subset species_traits traits specified proportion species.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_filter_traits_by_species_coverage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter traits with a given species coverage threshold — fb_filter_traits_by_species_coverage","text":"","code":"library(\"funbiogeo\")  data(\"species_traits\")  # Filter traits that have at least 60% non-missing values new_species_traits <- fb_filter_traits_by_species_coverage(   species_traits,   threshold_species_proportion = 0.6 )  # There are now only 2 traits ncol(new_species_traits) #> [1] 3"},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_format_site_locations.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract site x locations information from long format data — fb_format_site_locations","title":"Extract site x locations information from long format data — fb_format_site_locations","text":"Convert flat data.frame site coordinates proper sf object can used functions. function assumes coordinates given WGS84 (longitude vs. latitude). function automatically removes repeated coordinates input dataset.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_format_site_locations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract site x locations information from long format data — fb_format_site_locations","text":"","code":"fb_format_site_locations(   data,   site,   longitude,   latitude,   crs = sf::st_crs(4326),   na_rm = FALSE )"},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_format_site_locations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract site x locations information from long format data — fb_format_site_locations","text":"data data.frame long format (see example). site character length 1. Name column site labels. longitude character length 1. Name column longitude. function assumes coordinates WGS84 (EPSG:4326). latitude character length 1. Name column latitude. function assumes coordinates WGS84 (EPSG:4326). crs character length 1 object class crs. Coordinate Reference System (CRS) specified coordinates. CRS valid CRS R. can either character like \"+proj=longlat +datum=WGS84 +no_defs\" specified using sf::st_crs() like sf::st_crs(4326) default value. na_rm logical value. TRUE remove sites incomplete coordinates. Default FALSE.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_format_site_locations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract site x locations information from long format data — fb_format_site_locations","text":"sf object site column specifying site coordinates.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_format_site_locations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract site x locations information from long format data — fb_format_site_locations","text":"","code":"library(\"funbiogeo\")  filename <- system.file(\"extdata\", \"raw_mammals_data.csv\",                          package = \"funbiogeo\") all_data <- read.csv(filename)  head(all_data) #>   species           order    site longitude latitude count adult_body_mass #> 1  sp_001 Cetartiodactyla  fb_103  7.271821 59.09736     1        461900.8 #> 2  sp_001 Cetartiodactyla fb_1001 20.771821 52.59736     1        461900.8 #> 3  sp_001 Cetartiodactyla  fb_102  6.771821 59.09736     1        461900.8 #> 4  sp_001 Cetartiodactyla  fb_104  7.771821 59.09736     1        461900.8 #> 5  sp_001 Cetartiodactyla  fb_101  6.271821 59.09736     1        461900.8 #> 6  sp_001 Cetartiodactyla fb_1000 20.271821 52.59736     1        461900.8 #>   gestation_length litter_size max_longevity sexual_maturity_age diet_breadth #> 1              235        1.25           324               668.2            1 #> 2              235        1.25           324               668.2            1 #> 3              235        1.25           324               668.2            1 #> 4              235        1.25           324               668.2            1 #> 5              235        1.25           324               668.2            1 #> 6              235        1.25           324               668.2            1  site_locations <- fb_format_site_locations(all_data, \"site\", \"longitude\",                                             \"latitude\") head(site_locations) #> Simple feature collection with 6 features and 1 field #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 52.59736 ymin: 6.271821 xmax: 59.09736 ymax: 20.77182 #> Geodetic CRS:  WGS 84 #>      site                  geometry #> 1  fb_103 POINT (59.09736 7.271821) #> 2 fb_1001 POINT (52.59736 20.77182) #> 3  fb_102 POINT (59.09736 6.771821) #> 4  fb_104 POINT (59.09736 7.771821) #> 5  fb_101 POINT (59.09736 6.271821) #> 6 fb_1000 POINT (52.59736 20.27182)"},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_format_site_species.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract site x species information from long format data — fb_format_site_species","title":"Extract site x species information from long format data — fb_format_site_species","text":"Convert flat data.frame species occurrence/abundance site level proper data.frame object can used functions. final output contains sites rows species columns.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_format_site_species.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract site x species information from long format data — fb_format_site_species","text":"","code":"fb_format_site_species(data, site, species, value, na_to_zero = TRUE)"},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_format_site_species.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract site x species information from long format data — fb_format_site_species","text":"data data.frame long format (see example). site character length 1. Name column site labels. species character length 1. Name column species names. value character length 1. Name column species occurrence/abundance. na_to_zero logical value. TRUE (default) NA replaced 0.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_format_site_species.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract site x species information from long format data — fb_format_site_species","text":"data.frame sites rows species columns. first column named \"site\" contains name sites.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_format_site_species.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract site x species information from long format data — fb_format_site_species","text":"","code":"library(\"funbiogeo\")  filename <- system.file(\"extdata\", \"raw_mammals_data.csv\",                          package = \"funbiogeo\") all_data <- read.csv(filename)  head(all_data) #>   species           order    site longitude latitude count adult_body_mass #> 1  sp_001 Cetartiodactyla  fb_103  7.271821 59.09736     1        461900.8 #> 2  sp_001 Cetartiodactyla fb_1001 20.771821 52.59736     1        461900.8 #> 3  sp_001 Cetartiodactyla  fb_102  6.771821 59.09736     1        461900.8 #> 4  sp_001 Cetartiodactyla  fb_104  7.771821 59.09736     1        461900.8 #> 5  sp_001 Cetartiodactyla  fb_101  6.271821 59.09736     1        461900.8 #> 6  sp_001 Cetartiodactyla fb_1000 20.271821 52.59736     1        461900.8 #>   gestation_length litter_size max_longevity sexual_maturity_age diet_breadth #> 1              235        1.25           324               668.2            1 #> 2              235        1.25           324               668.2            1 #> 3              235        1.25           324               668.2            1 #> 4              235        1.25           324               668.2            1 #> 5              235        1.25           324               668.2            1 #> 6              235        1.25           324               668.2            1  site_species <- fb_format_site_species(all_data, \"site\", \"species\", \"count\") site_species[1:3, 1:4] #>      site sp_001 sp_002 sp_005 #> 1  fb_103      1      0      0 #> 2 fb_1001      1      1      1 #> 3  fb_102      1      0      0"},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_format_species_categories.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract species x categories information from long format data — fb_format_species_categories","title":"Extract species x categories information from long format data — fb_format_species_categories","text":"Convert flat data.frame species names species (supra-)category (e.g. family, order, endemism status, etc.) proper data.frame object can used functions. final output contains species rows two columns (species name species category).","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_format_species_categories.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract species x categories information from long format data — fb_format_species_categories","text":"","code":"fb_format_species_categories(data, species, category)"},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_format_species_categories.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract species x categories information from long format data — fb_format_species_categories","text":"data data.frame long format (see example). species character length 1. Name column species names. category character length 1. Name column species category.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_format_species_categories.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract species x categories information from long format data — fb_format_species_categories","text":"data.frame species rows two columns (species name species category).","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_format_species_categories.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract species x categories information from long format data — fb_format_species_categories","text":"","code":"library(\"funbiogeo\")  filename <- system.file(\"extdata\", \"raw_mammals_data.csv\",                          package = \"funbiogeo\") all_data <- read.csv(filename)  head(all_data) #>   species           order    site longitude latitude count adult_body_mass #> 1  sp_001 Cetartiodactyla  fb_103  7.271821 59.09736     1        461900.8 #> 2  sp_001 Cetartiodactyla fb_1001 20.771821 52.59736     1        461900.8 #> 3  sp_001 Cetartiodactyla  fb_102  6.771821 59.09736     1        461900.8 #> 4  sp_001 Cetartiodactyla  fb_104  7.771821 59.09736     1        461900.8 #> 5  sp_001 Cetartiodactyla  fb_101  6.271821 59.09736     1        461900.8 #> 6  sp_001 Cetartiodactyla fb_1000 20.271821 52.59736     1        461900.8 #>   gestation_length litter_size max_longevity sexual_maturity_age diet_breadth #> 1              235        1.25           324               668.2            1 #> 2              235        1.25           324               668.2            1 #> 3              235        1.25           324               668.2            1 #> 4              235        1.25           324               668.2            1 #> 5              235        1.25           324               668.2            1 #> 6              235        1.25           324               668.2            1  species_categories <- fb_format_species_categories(all_data, \"species\",                                                     \"order\") species_categories[1:6, ] #>    species           order #> 1   sp_001 Cetartiodactyla #> 8   sp_002        Rodentia #> 11  sp_005        Rodentia #> 27  sp_006        Rodentia #> 59  sp_010      Chiroptera #> 81  sp_013       Carnivora"},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_format_species_traits.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract species x traits information from long format data — fb_format_species_traits","title":"Extract species x traits information from long format data — fb_format_species_traits","text":"Convert flat data.frame traits values different species proper data.frame object can used functions. final output contains species rows traits columns.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_format_species_traits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract species x traits information from long format data — fb_format_species_traits","text":"","code":"fb_format_species_traits(data, species, traits)"},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_format_species_traits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract species x traits information from long format data — fb_format_species_traits","text":"data data.frame long format (see example). species character length 1. Name column species names. traits character length >= 1. Name(s) trait column(s).","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_format_species_traits.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract species x traits information from long format data — fb_format_species_traits","text":"data.frame species rows traits columns, first column names \"species\" containing species names.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_format_species_traits.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract species x traits information from long format data — fb_format_species_traits","text":"","code":"library(\"funbiogeo\")  filename <- system.file(\"extdata\", \"raw_mammals_data.csv\",                          package = \"funbiogeo\") all_data <- read.csv(filename)  head(all_data) #>   species           order    site longitude latitude count adult_body_mass #> 1  sp_001 Cetartiodactyla  fb_103  7.271821 59.09736     1        461900.8 #> 2  sp_001 Cetartiodactyla fb_1001 20.771821 52.59736     1        461900.8 #> 3  sp_001 Cetartiodactyla  fb_102  6.771821 59.09736     1        461900.8 #> 4  sp_001 Cetartiodactyla  fb_104  7.771821 59.09736     1        461900.8 #> 5  sp_001 Cetartiodactyla  fb_101  6.271821 59.09736     1        461900.8 #> 6  sp_001 Cetartiodactyla fb_1000 20.271821 52.59736     1        461900.8 #>   gestation_length litter_size max_longevity sexual_maturity_age diet_breadth #> 1              235        1.25           324               668.2            1 #> 2              235        1.25           324               668.2            1 #> 3              235        1.25           324               668.2            1 #> 4              235        1.25           324               668.2            1 #> 5              235        1.25           324               668.2            1 #> 6              235        1.25           324               668.2            1  traits <- c(\"adult_body_mass\", \"gestation_length\", \"litter_size\",              \"max_longevity\", \"sexual_maturity_age\", \"diet_breadth\")  species_traits <- fb_format_species_traits(all_data, \"species\", traits) head(species_traits) #>   species adult_body_mass gestation_length litter_size max_longevity #> 1  sp_001       461900.76           235.00        1.25         324.0 #> 2  sp_002           21.11            19.89        5.64          48.0 #> 3  sp_005           31.60            24.50        4.94          48.0 #> 4  sp_006           21.90            23.68        5.16          52.8 #> 5  sp_010            8.31               NA        1.73         252.0 #> 6  sp_013        31756.51            63.50        4.98         354.0 #>   sexual_maturity_age diet_breadth #> 1              668.20            1 #> 2               76.04           NA #> 3               43.27           NA #> 4               57.93            4 #> 5                  NA            1 #> 6              679.37            1"},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_get_all_trait_coverages_by_site.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Trait Coverage per Site for Each Trait — fb_get_all_trait_coverages_by_site","title":"Compute Trait Coverage per Site for Each Trait — fb_get_all_trait_coverages_by_site","text":"Compute trait coverage sites, .e., percentage total abundance/presence species traits data compared total species. function assumes species provided traits dataset traits specified (meaning species either known NA values reported traits). coverage trait separately returned well traits taken together wanted.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_get_all_trait_coverages_by_site.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Trait Coverage per Site for Each Trait — fb_get_all_trait_coverages_by_site","text":"","code":"fb_get_all_trait_coverages_by_site(   site_species,   species_traits,   all_traits = TRUE )"},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_get_all_trait_coverages_by_site.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Trait Coverage per Site for Each Trait — fb_get_all_trait_coverages_by_site","text":"site_species data.frame sites rows species columns. NOTE: first column named \"site\" indicate site names. columns named according species names. species_traits data.frame species rows traits columns. NOTE: first column named \"species\" contain species names. columns named according trait names. all_traits logical (default = TRUE) tell coverage considering provided traits provided additional column all_traits","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_get_all_trait_coverages_by_site.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Trait Coverage per Site for Each Trait — fb_get_all_trait_coverages_by_site","text":"data.frame column sites one column per provided trait giving coverage (percent species per site, weighted abundance trait data), , argument all_traits = TRUE, additional column named all_traits considering coverage traits taken together.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_get_all_trait_coverages_by_site.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Trait Coverage per Site for Each Trait — fb_get_all_trait_coverages_by_site","text":"","code":"site_trait_cov <- fb_get_all_trait_coverages_by_site(   site_species, species_traits )  head(site_trait_cov) #>   site all_traits adult_body_mass gestation_length litter_size max_longevity #> 1    1  0.7307692       0.9615385        0.8846154   0.9615385     0.8846154 #> 2    2  0.7586207       0.9655172        0.8965517   0.9655172     0.8965517 #> 3    3  0.7586207       0.9655172        0.8965517   0.9655172     0.8620690 #> 4    4  0.7586207       0.9655172        0.8965517   0.9655172     0.8620690 #> 5    5  0.7857143       0.9642857        0.9285714   0.9642857     0.8928571 #> 6    6  0.7586207       0.9655172        0.9310345   0.9655172     0.8965517 #>   sexual_maturity_age diet_breadth #> 1           0.8846154    0.8076923 #> 2           0.8965517    0.8275862 #> 3           0.8620690    0.8275862 #> 4           0.8620690    0.8275862 #> 5           0.8928571    0.8571429 #> 6           0.8965517    0.8275862"},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_get_environment.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Raster Values at Location of Sites — fb_get_environment","title":"Extract Raster Values at Location of Sites — fb_get_environment","text":"Extract Raster Values Location Sites","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_get_environment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Raster Values at Location of Sites — fb_get_environment","text":"","code":"fb_get_environment(site_locations, environment_raster)"},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_get_environment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Raster Values at Location of Sites — fb_get_environment","text":"site_locations sf object spatial geometries sites. NOTE: first column named \"site\" indicate site names. environment_raster SpatRaster object (package terra). single multi-layers environmental raster.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_get_environment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Raster Values at Location of Sites — fb_get_environment","text":"data.frame average environmental values (columns) per site (rows), first column \"site\" indicating site names.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_get_environment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Raster Values at Location of Sites — fb_get_environment","text":"","code":"library(\"funbiogeo\")  data(\"site_locations\")  ## Import climate rasters ---- prec <- system.file(\"extdata\", \"annual_tot_prec.tif\", package = \"funbiogeo\") tavg <- system.file(\"extdata\", \"annual_mean_temp.tif\", package = \"funbiogeo\")  layers <- terra::rast(c(tavg, prec))  fb_get_environment(head(site_locations), layers) #>   site annual_mean_temp annual_tot_prec #> 1    1        6.6755822       2480.2222 #> 2    2        1.6836227       1994.0000 #> 3    3        0.6628264       1384.5000 #> 4    4        1.4940648       1033.4444 #> 5    5        2.6325313        945.3611 #> 6    6        3.0806597        975.2778"},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_get_trait_combination_coverage.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute site trait coverage for each trait combination — fb_get_trait_combination_coverage","title":"Compute site trait coverage for each trait combination — fb_get_trait_combination_coverage","text":"function computes trait coverage site different trait combinations. provided, consider possible trait combinations. function run total number combinations given 10,000.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_get_trait_combination_coverage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute site trait coverage for each trait combination — fb_get_trait_combination_coverage","text":"","code":"fb_get_trait_combination_coverage(   site_species,   species_traits,   comb_size = NULL )"},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_get_trait_combination_coverage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute site trait coverage for each trait combination — fb_get_trait_combination_coverage","text":"site_species data.frame sites rows species columns. NOTE: first column named \"site\" indicate site names. columns named according species names. species_traits data.frame species rows traits columns. NOTE: first column named \"species\" contain species names. columns named according trait names. comb_size integer vector defining one sizes combinations (default: NULL)","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_get_trait_combination_coverage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute site trait coverage for each trait combination — fb_get_trait_combination_coverage","text":"data.frame following columns: site site indices site_species, combination_length number traits given combinations, combination_name name trait combination (concatenated trait names __), trait_coverage corresponding trait coverage given trait combination site.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_get_trait_combination_coverage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute site trait coverage for each trait combination — fb_get_trait_combination_coverage","text":"","code":"# Compute Coverages using All Trait Combinations all_combinations = fb_get_trait_combination_coverage( site_species, species_traits )  # Get only combinations of 3 traits three_traits = fb_get_trait_combination_coverage( site_species, species_traits, 3 )  # Combinations of 2, 3, and 4 traits two_to_four = fb_get_trait_combination_coverage( site_species, species_traits, c(2, 3, 4) )"},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_get_trait_coverage_by_site.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Trait Coverage For Each Site Weighted by Abundance — fb_get_trait_coverage_by_site","title":"Compute Trait Coverage For Each Site Weighted by Abundance — fb_get_trait_coverage_by_site","text":"Compute trait coverage sites, .e., percentage total abundance/presence species traits data compared total species. function assumes species provided traits dataset traits specified (meaning species either known NA values reported traits). NB: function returns trait coverage using traits provided input species_traits data.frame.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_get_trait_coverage_by_site.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Trait Coverage For Each Site Weighted by Abundance — fb_get_trait_coverage_by_site","text":"","code":"fb_get_trait_coverage_by_site(site_species, species_traits)"},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_get_trait_coverage_by_site.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Trait Coverage For Each Site Weighted by Abundance — fb_get_trait_coverage_by_site","text":"site_species data.frame sites rows species columns. NOTE: first column named \"site\" indicate site names. columns named according species names. species_traits data.frame species rows traits columns. NOTE: first column named \"species\" contain species names. columns named according trait names.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_get_trait_coverage_by_site.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Trait Coverage For Each Site Weighted by Abundance — fb_get_trait_coverage_by_site","text":"data.frame n rows (n number sites) two columns: site, site label, trait_coverage, percent total abundance/presence species traits data.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_get_trait_coverage_by_site.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Trait Coverage For Each Site Weighted by Abundance — fb_get_trait_coverage_by_site","text":"","code":"library(\"funbiogeo\")  data(\"site_species\") data(\"species_traits\")  site_trait_cov <- fb_get_trait_coverage_by_site(site_species, species_traits)  head(site_trait_cov) #>   site trait_coverage #> 1    1      0.7307692 #> 2    2      0.7586207 #> 3    3      0.7586207 #> 4    4      0.7586207 #> 5    5      0.7857143 #> 6    6      0.7586207"},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_make_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an R Markdown Report on Site/Species/Trait Coverage with Plots — fb_make_report","title":"Create an R Markdown Report on Site/Species/Trait Coverage with Plots — fb_make_report","text":"Creates R Markdown (.Rmd) report template explore summarize users data. User can modify report use function rmarkdown::render() convert .Rmd different formats: HTML document (output_format = \"bookdown::html_document2\"); PDF document (output_format = \"bookdown::pdf_document2\"); Word document (output_format = \"bookdown::word_document2\"); HTML, PDF Word documents (output_format = \"\").","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_make_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an R Markdown Report on Site/Species/Trait Coverage with Plots — fb_make_report","text":"","code":"fb_make_report(   path = \".\",   filename = NULL,   title = NULL,   author = NULL,   species_traits_name,   site_species_name,   site_locations_name,   overwrite = FALSE,   open = TRUE )"},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_make_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an R Markdown Report on Site/Species/Trait Coverage with Plots — fb_make_report","text":"path character length 1. directory .Rmd file created. directory must exist. filename character length 1. name .Rmd file created. NULL (default) .Rmd file named funbiogeo_report.Rmd. title character length 1. title report. NULL (default) title funbiogeo Report. author character length 1. author(s) report. NULL (default) author added. species_traits_name character length 1. name species x traits dataset (object). Note rendering report dataset must loaded. site_species_name character length 1. name sites x species dataset (object). Note rendering report dataset must loaded. site_locations_name character length 1. name sites x locations dataset (object). Note rendering report dataset must loaded. overwrite logical. file already present overwrite = TRUE, erased replaced template. Default FALSE. open logical. TRUE (default), file opened text editor.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_make_report.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an R Markdown Report on Site/Species/Trait Coverage with Plots — fb_make_report","text":"return value.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_make_report.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an R Markdown Report on Site/Species/Trait Coverage with Plots — fb_make_report","text":"","code":"# Create temporary folder temp_path <- tempdir()  # Load data data(\"species_traits\") data(\"site_species\") data(\"site_locations\")  # Create report fb_make_report(   path                = temp_path,    author              = \"Casajus N. and Grenié M.\",   species_traits_name = \"species_traits\",   site_species_name   = \"site_species\",   site_locations_name = \"site_locations\",   open = FALSE ) #> The file '/tmp/RtmpW5pAUh/funbiogeo_report.Rmd' was created! #> Open it then use knitr::knit() or rmarkdown::render() to render it.  if (FALSE) { # \\dontrun{ # Open Rmd file ---- utils::file.edit(file.path(temp_path, \"funbiogeo_report.Rmd\"))  # Render Rmd file ---- rmarkdown::render(file.path(temp_path, \"funbiogeo_report.Rmd\"),                    output_format = \"all\") } # }"},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_map_raster.html","id":null,"dir":"Reference","previous_headings":"","what":"Map a Single Raster Layer — fb_map_raster","title":"Map a Single Raster Layer — fb_map_raster","text":"Map Single Raster Layer","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_map_raster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map a Single Raster Layer — fb_map_raster","text":"","code":"fb_map_raster(x, ...)"},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_map_raster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map a Single Raster Layer — fb_map_raster","text":"x SpatRaster object (package terra). raster one single layer ... parameters passed theme()","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_map_raster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map a Single Raster Layer — fb_map_raster","text":"ggplot object.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_map_raster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map a Single Raster Layer — fb_map_raster","text":"","code":"library(ggplot2)  ## Load raster ---- tavg <- system.file(\"extdata\", \"annual_mean_temp.tif\", package = \"funbiogeo\") tavg <- terra::rast(tavg)  ## Default map ---- fb_map_raster(tavg)   ## Map with custom theme ---- fb_map_raster(tavg, legend.position = \"bottom\")   ## Advanced customization ---- my_map <- fb_map_raster(tavg) +    scale_fill_distiller(\"Temperature\", palette = \"Spectral\") +   theme(legend.position = \"bottom\") +    ggtitle(\"Mean annual temperature in Western Europe\")  my_map   ## Map w/o annotation ---- fb_map_raster(tavg) +    theme_void() +    theme(legend.position = \"none\")"},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_map_site_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Map Arbitrary Site Data — fb_map_site_data","title":"Map Arbitrary Site Data — fb_map_site_data","text":"site-locations data dataset organized site, plot map information. returned plot little customized possible let user customization.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_map_site_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map Arbitrary Site Data — fb_map_site_data","text":"","code":"fb_map_site_data(site_locations, site_data, selected_col)"},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_map_site_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map Arbitrary Site Data — fb_map_site_data","text":"site_locations sf object spatial geometries sites. NOTE: first column named \"site\" indicate site names. site_data data.frame() additional site information containing column \"site\" merge site_locations argument selected_col character(1) name column plot","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_map_site_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map Arbitrary Site Data — fb_map_site_data","text":"ggplot object.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_map_site_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map Arbitrary Site Data — fb_map_site_data","text":"","code":"site_rich <- fb_count_species_by_site(site_species)  # Map of Species Richness rich_map <- fb_map_site_data(site_locations, site_rich, \"n_species\") rich_map   # Customize the map rich_map +   ggplot2::scale_fill_viridis_c(\"Species Richness\")"},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_map_site_traits_completeness.html","id":null,"dir":"Reference","previous_headings":"","what":"Map Trait Coverage Per Site — fb_map_site_traits_completeness","title":"Map Trait Coverage Per Site — fb_map_site_traits_completeness","text":"Returns ggplot2 map sites colored trait coverage (proportion species known trait value). default shows one plot trait add additional facet named \"all_traits\" considering trait coverage traits taken together.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_map_site_traits_completeness.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map Trait Coverage Per Site — fb_map_site_traits_completeness","text":"","code":"fb_map_site_traits_completeness(   site_locations,   site_species,   species_traits,   all_traits = TRUE )"},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_map_site_traits_completeness.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map Trait Coverage Per Site — fb_map_site_traits_completeness","text":"site_locations sf object spatial geometries sites. NOTE: first column named \"site\" indicate site names. site_species data.frame sites rows species columns. NOTE: first column named \"site\" indicate site names. columns named according species names. species_traits data.frame species rows traits columns. NOTE: first column named \"species\" contain species names. columns named according trait names. all_traits logical (default = TRUE) tell coverage considering provided traits provided additional column all_traits","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_map_site_traits_completeness.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map Trait Coverage Per Site — fb_map_site_traits_completeness","text":"'ggplot2' object","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_map_site_traits_completeness.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map Trait Coverage Per Site — fb_map_site_traits_completeness","text":"","code":"fb_map_site_traits_completeness(site_locations, site_species, species_traits)"},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_plot_distribution_site_trait_coverage.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Distribution of Trait Coverages across all Sites — fb_plot_distribution_site_trait_coverage","title":"Plot Distribution of Trait Coverages across all Sites — fb_plot_distribution_site_trait_coverage","text":"Plots distributions trait coverage across site, .e. proportion species weighted abundance known trait values, trait separately traits taken together. trait distributions ordered lowest highest average trait coverage (top bottom). top always displays distribution named \"all_traits\" contains distribution coverage traits taken together.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_plot_distribution_site_trait_coverage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Distribution of Trait Coverages across all Sites — fb_plot_distribution_site_trait_coverage","text":"","code":"fb_plot_distribution_site_trait_coverage(   site_species,   species_traits,   species_categories = NULL,   all_traits = TRUE )"},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_plot_distribution_site_trait_coverage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Distribution of Trait Coverages across all Sites — fb_plot_distribution_site_trait_coverage","text":"site_species data.frame sites rows species columns. NOTE: first column named \"site\" indicate site names. columns named according species names. species_traits data.frame species rows traits columns. NOTE: first column named \"species\" contain species names. columns named according trait names. species_categories (default = NULL) 2-columns data.frame giving species categories, first column describing species name, second column giving corresponding categories all_traits logical (default = TRUE) tell coverage considering provided traits provided additional column all_traits","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_plot_distribution_site_trait_coverage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Distribution of Trait Coverages across all Sites — fb_plot_distribution_site_trait_coverage","text":"'ggplot2' object","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_plot_distribution_site_trait_coverage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Distribution of Trait Coverages across all Sites — fb_plot_distribution_site_trait_coverage","text":"","code":"fb_plot_distribution_site_trait_coverage(site_species, species_traits) #> Loading required namespace: ggridges #> Picking joint bandwidth of 0.00988"},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_plot_number_sites_by_species.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Number of Sites by Species — fb_plot_number_sites_by_species","title":"Plot Number of Sites by Species — fb_plot_number_sites_by_species","text":"Represent species function number sites occupy. species ordered ones occupy least number sites ones occupy . number site indicated bottom x-axis, top x-axis represents proportion occupied sites. left y-axis label species names rank increasing prevalence. user can supplied threshold sites see many species occupy less given proportion sites.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_plot_number_sites_by_species.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Number of Sites by Species — fb_plot_number_sites_by_species","text":"","code":"fb_plot_number_sites_by_species(   site_species,   threshold_sites_proportion = NULL )"},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_plot_number_sites_by_species.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Number of Sites by Species — fb_plot_number_sites_by_species","text":"site_species data.frame sites rows species columns. NOTE: first column named \"site\" indicate site names. columns named according species names. threshold_sites_proportion numeric length 1 0 1. percentage sites coverage threshold.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_plot_number_sites_by_species.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Number of Sites by Species — fb_plot_number_sites_by_species","text":"ggplot2 object","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_plot_number_sites_by_species.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Number of Sites by Species — fb_plot_number_sites_by_species","text":"","code":"fb_plot_number_sites_by_species(site_species) #> There are more than 30 species, the y-axis will label the position of 30 evenly spaced species (along their prevalence)   # Add a vertical cutoff line (40% of sites) fb_plot_number_sites_by_species(site_species, 0.4) #> There are more than 30 species, the y-axis will label the position of 30 evenly spaced species (along their prevalence)"},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_plot_number_species_by_trait.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Number of Species per Trait — fb_plot_number_species_by_trait","title":"Plot Number of Species per Trait — fb_plot_number_species_by_trait","text":"Display lollipop graph showing number proportion species non-NA trait trait ranked decreasing order.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_plot_number_species_by_trait.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Number of Species per Trait — fb_plot_number_species_by_trait","text":"","code":"fb_plot_number_species_by_trait(   species_traits,   species_categories = NULL,   threshold_species_proportion = NULL )"},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_plot_number_species_by_trait.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Number of Species per Trait — fb_plot_number_species_by_trait","text":"species_traits data.frame species rows traits columns. NOTE: first column named \"species\" contain species names. columns named according trait names. species_categories (default = NULL) 2-columns data.frame giving species categories, first column describing species name, second column giving corresponding categories threshold_species_proportion numeric(1) [default = NULL] 0 1. percentage species coverage threshold.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_plot_number_species_by_trait.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Number of Species per Trait — fb_plot_number_species_by_trait","text":"ggplot2 object","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_plot_number_species_by_trait.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Number of Species per Trait — fb_plot_number_species_by_trait","text":"","code":"data(species_traits)  fb_plot_number_species_by_trait(species_traits)   # Add a vertical cutoff line (12.5% of species) fb_plot_number_species_by_trait(species_traits, NULL, 1/8)"},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_plot_number_traits_by_species.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Number of Traits per Species — fb_plot_number_traits_by_species","title":"Plot Number of Traits per Species — fb_plot_number_traits_by_species","text":"Display graph showing number (proportion) species least 0, 1, etc. number traits. provides lollipop graph examine number trait cover certain proportion species. plot show traits concerned.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_plot_number_traits_by_species.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Number of Traits per Species — fb_plot_number_traits_by_species","text":"","code":"fb_plot_number_traits_by_species(   species_traits,   species_categories = NULL,   threshold_species_proportion = NULL )"},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_plot_number_traits_by_species.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Number of Traits per Species — fb_plot_number_traits_by_species","text":"species_traits data.frame species rows traits columns. NOTE: first column named \"species\" contain species names. columns named according trait names. species_categories (default = NULL) 2-columns data.frame giving species categories, first column describing species name, second column giving corresponding categories threshold_species_proportion numeric(1) [default = NULL] 0 1. percentage species coverage threshold.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_plot_number_traits_by_species.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Number of Traits per Species — fb_plot_number_traits_by_species","text":"ggplot2 object","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_plot_number_traits_by_species.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Number of Traits per Species — fb_plot_number_traits_by_species","text":"","code":"data(species_traits)  fb_plot_number_traits_by_species(species_traits)   # Add a vertical cutoff line (33% of the species) fb_plot_number_traits_by_species(   species_traits, threshold_species_proportion = 1/3  )"},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_plot_site_environment.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Position of Sites in Environmental Space — fb_plot_site_environment","title":"Plot Position of Sites in Environmental Space — fb_plot_site_environment","text":"Plot figure showing average environmental space given sites compared full environmental vector. sake simplicity represents figure along two environmental axes. average environmental value extracted site.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_plot_site_environment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Position of Sites in Environmental Space — fb_plot_site_environment","text":"","code":"fb_plot_site_environment(   site_locations,   environment_raster,   first_layer = names(environment_raster)[1],   second_layer = names(environment_raster)[2] )"},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_plot_site_environment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Position of Sites in Environmental Space — fb_plot_site_environment","text":"site_locations sf object spatial geometries sites. NOTE: first column named \"site\" indicate site names. environment_raster SpatRaster object (package terra). single multi-layers environmental raster. first_layer character(1) name first layer use, default uses first layer environment_raster second_layer character(1) name second layer use, default uses second layer environment_raster","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_plot_site_environment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Position of Sites in Environmental Space — fb_plot_site_environment","text":"ggplot object","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_plot_site_environment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Position of Sites in Environmental Space — fb_plot_site_environment","text":"","code":"data(\"site_locations\")  # Import climate rasters prec <- system.file(\"extdata\", \"annual_tot_prec.tif\", package = \"funbiogeo\") tavg <- system.file(\"extdata\", \"annual_mean_temp.tif\", package = \"funbiogeo\")  layers <- terra::rast(c(tavg, prec))  # Make plot (show environmental position of 6 first sites) fb_plot_site_environment(head(site_locations), layers) #> Warning: Removed 49503 rows containing missing values or values outside the scale range #> (`geom_point()`)."},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_plot_site_traits_completeness.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Trait Coverage per Site for each Trait — fb_plot_site_traits_completeness","title":"Plot Trait Coverage per Site for each Trait — fb_plot_site_traits_completeness","text":"Display binary heatmap visualizing site x traits matrix colors displaying proportion occurring species known trait values. Traits ordered least known (left right). Sites ordered ones highest lowest overall trait coverage (bottom top). site average proportion species known trait trait (across sites) shown x-axis labels. additional column right plot named \"all_traits\" shows summary considering traits together.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_plot_site_traits_completeness.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Trait Coverage per Site for each Trait — fb_plot_site_traits_completeness","text":"","code":"fb_plot_site_traits_completeness(   site_species,   species_traits,   species_categories = NULL,   all_traits = TRUE )"},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_plot_site_traits_completeness.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Trait Coverage per Site for each Trait — fb_plot_site_traits_completeness","text":"site_species data.frame sites rows species columns. NOTE: first column named \"site\" indicate site names. columns named according species names. species_traits data.frame species rows traits columns. NOTE: first column named \"species\" contain species names. columns named according trait names. species_categories (default = NULL) 2-columns data.frame giving species categories, first column describing species name, second column giving corresponding categories all_traits logical (default = TRUE) tell coverage considering provided traits provided additional column all_traits","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_plot_site_traits_completeness.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Trait Coverage per Site for each Trait — fb_plot_site_traits_completeness","text":"ggplot2 object","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_plot_site_traits_completeness.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Trait Coverage per Site for each Trait — fb_plot_site_traits_completeness","text":"","code":"fb_plot_site_traits_completeness(site_species, species_traits)"},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_plot_species_traits_completeness.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Trait Coverage per Species for each Trait — fb_plot_species_traits_completeness","title":"Plot Trait Coverage per Species for each Trait — fb_plot_species_traits_completeness","text":"Display binary heatmap visualizing species x traits matrix colors displaying present missing traits. Traits ordered least known (left right). Species ordered ones ones least traits (bottom top). proportion species non-missing traits shown x-axis labels. additional column right plot named \"all_traits\" shows summary considering traits known.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_plot_species_traits_completeness.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Trait Coverage per Species for each Trait — fb_plot_species_traits_completeness","text":"","code":"fb_plot_species_traits_completeness(   species_traits,   species_categories = NULL,   all_traits = TRUE )"},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_plot_species_traits_completeness.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Trait Coverage per Species for each Trait — fb_plot_species_traits_completeness","text":"species_traits data.frame species rows traits columns. NOTE: first column named \"species\" contain species names. columns named according trait names. species_categories (default = NULL) 2-columns data.frame giving species categories, first column describing species name, second column giving corresponding categories all_traits logical (default = TRUE) tell coverage considering provided traits provided additional column all_traits","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_plot_species_traits_completeness.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Trait Coverage per Species for each Trait — fb_plot_species_traits_completeness","text":"ggplot2 object","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_plot_species_traits_completeness.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Trait Coverage per Species for each Trait — fb_plot_species_traits_completeness","text":"","code":"data(species_traits) fb_plot_species_traits_completeness(species_traits)"},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_plot_species_traits_missingness.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Trait Coverage per Species for each Trait — fb_plot_species_traits_missingness","title":"Plot Trait Coverage per Species for each Trait — fb_plot_species_traits_missingness","text":"Display binary heatmap visualizing species x traits matrix colors displaying present missing traits. Traits ordered least known (left right). Species ordered ones ones least traits (bottom top). proportion species non-missing traits shown x-axis labels. additional column right plot named \"all_traits\" shows summary considering traits known.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_plot_species_traits_missingness.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Trait Coverage per Species for each Trait — fb_plot_species_traits_missingness","text":"","code":"fb_plot_species_traits_missingness(   species_traits,   species_categories = NULL,   all_traits = TRUE )"},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_plot_species_traits_missingness.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Trait Coverage per Species for each Trait — fb_plot_species_traits_missingness","text":"species_traits data.frame species rows traits columns. NOTE: first column named \"species\" contain species names. columns named according trait names. species_categories 2-columns data.frame giving species categories NULL default, first column describing species name, second column giving corresponding categories all_traits logical (default = TRUE) tell coverage considering provided traits provided additional column all_traits","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_plot_species_traits_missingness.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Trait Coverage per Species for each Trait — fb_plot_species_traits_missingness","text":"ggplot2 object","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_plot_species_traits_missingness.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Trait Coverage per Species for each Trait — fb_plot_species_traits_missingness","text":"","code":"data(species_traits) fb_plot_species_traits_missingness(species_traits)"},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_plot_trait_combination_frequencies.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Present and Missing Trait Combinations Frequencies — fb_plot_trait_combination_frequencies","title":"Plot Present and Missing Trait Combinations Frequencies — fb_plot_trait_combination_frequencies","text":"Display figure Present/Missing Trait Combinations one square represents one trait. y-axis gives frequency row (well proportions compared total number rows).","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_plot_trait_combination_frequencies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Present and Missing Trait Combinations Frequencies — fb_plot_trait_combination_frequencies","text":"","code":"fb_plot_trait_combination_frequencies(   species_traits,   species_categories = NULL,   order_by = c(\"number\", \"complete\") )"},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_plot_trait_combination_frequencies.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Present and Missing Trait Combinations Frequencies — fb_plot_trait_combination_frequencies","text":"species_traits data.frame species rows traits columns. NOTE: first column named \"species\" contain species names. columns named according trait names. species_categories (default = NULL) 2-columns data.frame giving species categories, first column describing species name, second column giving corresponding categories order_by character(1) either \"number\" \"complete \"number\" order rows frequency frequent rows bottom. Otherwise order rows order table number non-missing traits frequency combinations","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_plot_trait_combination_frequencies.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Present and Missing Trait Combinations Frequencies — fb_plot_trait_combination_frequencies","text":"ggplot2 object","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_plot_trait_combination_frequencies.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Present and Missing Trait Combinations Frequencies — fb_plot_trait_combination_frequencies","text":"","code":"# Ordered by number by default fb_plot_trait_combination_frequencies(species_traits)   # Order by present traits fb_plot_trait_combination_frequencies(species_traits, NULL, \"complete\")"},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_plot_trait_correlation.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Trait Correlation Matrix — fb_plot_trait_correlation","title":"Plot Trait Correlation Matrix — fb_plot_trait_correlation","text":"functions outputs ggplot2 figure outputs trait correlation matrix. works numerical traits output messages non-numerical traits found errors numerical traits found. Internally uses stats::cor() function works complete observation (removes row contains NA). Use ... argument pass options cor() function.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_plot_trait_correlation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Trait Correlation Matrix — fb_plot_trait_correlation","text":"","code":"fb_plot_trait_correlation(species_traits, species_categories = NULL, ...)"},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_plot_trait_correlation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Trait Correlation Matrix — fb_plot_trait_correlation","text":"species_traits data.frame species rows traits columns. NOTE: first column named \"species\" contain species names. columns named according trait names. species_categories (default = NULL) 2-columns data.frame giving species categories, first column describing species name, second column giving corresponding categories ... Additional options passed stats::cor()","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_plot_trait_correlation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Trait Correlation Matrix — fb_plot_trait_correlation","text":"ggplot object","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_plot_trait_correlation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Trait Correlation Matrix — fb_plot_trait_correlation","text":"","code":"fb_plot_trait_correlation(species_traits)   # Plot Spearman's correlation fb_plot_trait_correlation(species_traits, method = \"spearman\")"},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_table_trait_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary Table on Traits (Missingness, Range, etc.) — fb_table_trait_summary","title":"Summary Table on Traits (Missingness, Range, etc.) — fb_table_trait_summary","text":"function outputs data.frame summarises species trait table many information glance. can return data.frame nicely formatted knitr::kable() inclusion Rmarkdown document.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_table_trait_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary Table on Traits (Missingness, Range, etc.) — fb_table_trait_summary","text":"","code":"fb_table_trait_summary(species_traits, kable = FALSE)"},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_table_trait_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary Table on Traits (Missingness, Range, etc.) — fb_table_trait_summary","text":"species_traits data.frame species rows traits columns. NOTE: first column named \"species\" contain species names. columns named according trait names. kable TRUE FALSE function returns knitr::kable()? defaults FALSE","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_table_trait_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary Table on Traits (Missingness, Range, etc.) — fb_table_trait_summary","text":"data.frame following columns: trait_name: character column trait name indicated species_traits trait_type: nature trait (numeric, categorical, ordered) number_non_missing: total number non-NA trait values proportion_non_missing: proportion non-NA trait values trait_range: numerical traits, range values trait_mean_sd: numerical traits, mean plus-minus standard deviation number_distinct: non-numerical traits, number categories list_distinct: non-numerical traits, list categories","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/fb_table_trait_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary Table on Traits (Missingness, Range, etc.) — fb_table_trait_summary","text":"","code":"# Get a data.frame back fb_table_trait_summary(species_traits) #>            trait_name trait_type number_non_missing proportion_non_missing #> 1     adult_body_mass    numeric                123                   83 % #> 2    gestation_length    numeric                 88                   59 % #> 3         litter_size    numeric                114                   77 % #> 4       max_longevity    numeric                 81                   54 % #> 5 sexual_maturity_age    numeric                 84                   56 % #> 6        diet_breadth    numeric                 83                   56 % #>     trait_range    trait_mean_sd number_distinct list_distinct #> 1 2.26-675876.7 18809.7ற79086.68              NA          <NA> #> 2   19.5-265.99      69.93ற63.58              NA          <NA> #> 3     0.98-8.99        3.37ற2.03              NA          <NA> #> 4        12-600    171.28ற117.18              NA          <NA> #> 5 25.37-1542.25    392.01ற314.88              NA          <NA> #> 6           1-8        2.46ற1.98              NA          <NA>  # Get a kable (to use in Rmd documents) fb_table_trait_summary(species_traits, TRUE) #>  #>  #> |Trait Name          |Nature of Trait | Number of Non-Missing Values|Proportion of Non-Missing Values |Range of Trait |Trait Mean ற SD  | Number of Distinct Values|List of Distinct Values | #> |:-------------------|:---------------|----------------------------:|:--------------------------------|:--------------|:----------------|-------------------------:|:-----------------------| #> |adult_body_mass     |numeric         |                          123|83 %                             |2.26-675876.7  |18809.7ற79086.68 |                        NA|NA                      | #> |gestation_length    |numeric         |                           88|59 %                             |19.5-265.99    |69.93ற63.58      |                        NA|NA                      | #> |litter_size         |numeric         |                          114|77 %                             |0.98-8.99      |3.37ற2.03        |                        NA|NA                      | #> |max_longevity       |numeric         |                           81|54 %                             |12-600         |171.28ற117.18    |                        NA|NA                      | #> |sexual_maturity_age |numeric         |                           84|56 %                             |25.37-1542.25  |392.01ற314.88    |                        NA|NA                      | #> |diet_breadth        |numeric         |                           83|56 %                             |1-8            |2.46ற1.98        |                        NA|NA                      |"},{"path":"https://frbcesab.github.io/funbiogeo/reference/funbiogeo-package.html","id":null,"dir":"Reference","previous_headings":"","what":"funbiogeo: Functional Biogeography Analyses — funbiogeo-package","title":"funbiogeo: Functional Biogeography Analyses — funbiogeo-package","text":"Helps users analyses functional biogeogeography loading combining data, computing trait coverage, well computing functional diversity indices, drawing maps, correlating environment, upscaling assemblages.","code":""},{"path":[]},{"path":"https://frbcesab.github.io/funbiogeo/reference/funbiogeo-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"funbiogeo: Functional Biogeography Analyses — funbiogeo-package","text":"Maintainer: Nicolas Casajus nicolas.casajus@fondationbiodiversite.fr (ORCID) [copyright holder] Authors: Matthias Grenié matthias.grenie@idiv.de (ORCID)","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/site_locations.html","id":null,"dir":"Reference","previous_headings":"","what":"Sites x Locations of Western Europe Mammals — site_locations","title":"Sites x Locations of Western Europe Mammals — site_locations","text":"dataset contains spatial coordinates (grid cells 0.5° x 0.5° horizontal resolution) sites Western Europe mammals species presence/absence (see site_species dataset) sampled.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/site_locations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sites x Locations of Western Europe Mammals — site_locations","text":"","code":"site_locations"},{"path":"https://frbcesab.github.io/funbiogeo/reference/site_locations.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sites x Locations of Western Europe Mammals — site_locations","text":"sf object 1,505 rows (grid cells) WGS84 (EPSG:4236) Coordinate Reference System.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/site_locations.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sites x Locations of Western Europe Mammals — site_locations","text":"See https://github.com/frbcesab/eumammals complete description workflow used create dataset. dataset shows format argument site_locations used several functions funbiogeo. variable site corresponds sites labels.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/site_locations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sites x Locations of Western Europe Mammals — site_locations","text":"","code":"data(\"site_locations\") class(site_locations) #> [1] \"sf\"         \"data.frame\" dim(site_locations) #> [1] 1505    2 head(site_locations) #> Simple feature collection with 6 features and 1 field #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: 5.521821 ymin: 59.34736 xmax: 9.021821 ymax: 59.84736 #> Geodetic CRS:  WGS 84 #>   site                           geom #> 1    1 POLYGON ((5.521821 59.84736... #> 2    2 POLYGON ((6.521821 59.84736... #> 3    3 POLYGON ((7.021821 59.84736... #> 4    4 POLYGON ((7.521821 59.84736... #> 5    5 POLYGON ((8.021821 59.84736... #> 6    6 POLYGON ((8.521821 59.84736..."},{"path":"https://frbcesab.github.io/funbiogeo/reference/site_species.html","id":null,"dir":"Reference","previous_headings":"","what":"Sites x Species of Western Europe Mammals — site_species","title":"Sites x Species of Western Europe Mammals — site_species","text":"dataset contains presence/absence mammals species Western Europe. dataset derived IUCN range maps downloaded : https://www.iucnredlist.org/resources/spatial-data-download. respect license, species names anonymized.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/site_species.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sites x Species of Western Europe Mammals — site_species","text":"","code":"site_species"},{"path":"https://frbcesab.github.io/funbiogeo/reference/site_species.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sites x Species of Western Europe Mammals — site_species","text":"data.frame 1,505 rows (sites) 150 columns (1 column site label 149 species occurrence).","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/site_species.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sites x Species of Western Europe Mammals — site_species","text":"See https://github.com/frbcesab/eumammals complete description workflow used create dataset. dataset shows format argument site_species used several functions funbiogeo. Note sites labels (site) first column dataset.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/site_species.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Sites x Species of Western Europe Mammals — site_species","text":"IUCN (2021) IUCN Red List Threatened Species. Version 2021-2. Downloaded 2021/10/11.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/site_species.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sites x Species of Western Europe Mammals — site_species","text":"","code":"data(\"site_species\") class(site_species) #> [1] \"data.frame\" dim(site_species) #> [1] 1505  150 site_species[1:6, 1:6] #>   site sp_001 sp_002 sp_003 sp_004 sp_005 #> 1    1      1      0      0      0      0 #> 2    2      1      0      0      0      0 #> 3    3      1      0      0      0      0 #> 4    4      1      0      0      0      0 #> 5    5      1      0      0      0      0 #> 6    6      1      0      0      0      1"},{"path":"https://frbcesab.github.io/funbiogeo/reference/species_categories.html","id":null,"dir":"Reference","previous_headings":"","what":"Species x Categories of Western Europe Mammals — species_categories","title":"Species x Categories of Western Europe Mammals — species_categories","text":"dataset contains order mammals species Western Europe. dataset derived IUCN range maps downloaded : https://www.iucnredlist.org/resources/spatial-data-download. respect license, species names anonymized.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/species_categories.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Species x Categories of Western Europe Mammals — species_categories","text":"","code":"species_categories"},{"path":"https://frbcesab.github.io/funbiogeo/reference/species_categories.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Species x Categories of Western Europe Mammals — species_categories","text":"data.frame 149 rows (species) 2 columns (1 column species name 1 order).","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/species_categories.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Species x Categories of Western Europe Mammals — species_categories","text":"See https://github.com/frbcesab/eumammals complete description workflow used create dataset. dataset shows format argument species_categories used several functions funbiogeo. Note species names (species) first column dataset.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/species_categories.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Species x Categories of Western Europe Mammals — species_categories","text":"IUCN (2021) IUCN Red List Threatened Species. Version 2021-2. Downloaded 2021/10/11.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/species_categories.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Species x Categories of Western Europe Mammals — species_categories","text":"","code":"data(\"species_categories\") class(species_categories) #> [1] \"data.frame\" dim(species_categories) #> [1] 149   2 species_categories[1:6, ] #>   species           order #> 1  sp_001 Cetartiodactyla #> 2  sp_002        Rodentia #> 3  sp_003        Rodentia #> 4  sp_004        Rodentia #> 5  sp_005        Rodentia #> 6  sp_006        Rodentia"},{"path":"https://frbcesab.github.io/funbiogeo/reference/species_traits.html","id":null,"dir":"Reference","previous_headings":"","what":"Species x Traits of Western Europe Mammals — species_traits","title":"Species x Traits of Western Europe Mammals — species_traits","text":"dataset contains values six functional traits Western Europe mammals species. values extracted PanTHERIA database (Jones 2009), database World mammals traits available : https://esapubs.org/archive/ecol/E090/184/metadata.htm. respect IUCN license, species names anonymized.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/species_traits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Species x Traits of Western Europe Mammals — species_traits","text":"","code":"species_traits"},{"path":"https://frbcesab.github.io/funbiogeo/reference/species_traits.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Species x Traits of Western Europe Mammals — species_traits","text":"matrix 149 rows (species) following seven columns: species species name corresponding columns site_species adult_body_mass adult body mass (grams) gestation_length length time non-inactive fetal growth (days) litter_size number offspring born per litter per female max_longevity maximum adult age (months) sexual_maturity_age age individuals first physically capable reproducing (days) diet_breadth number dietary categories eaten","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/species_traits.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Species x Traits of Western Europe Mammals — species_traits","text":"See https://github.com/frbcesab/eumammals complete description workflow used create dataset. dataset shows format argument species_traits used several functions funbiogeo. Note species names (species) first column dataset.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/species_traits.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Species x Traits of Western Europe Mammals — species_traits","text":"Jones KE et al. (2009) PanTHERIA: species-level database life history, ecology, geography extant recently extinct mammals. Ecology, 90, 2648. DOI: 10.1890/08-1494.1.","code":""},{"path":"https://frbcesab.github.io/funbiogeo/reference/species_traits.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Species x Traits of Western Europe Mammals — species_traits","text":"","code":"data(\"species_traits\") class(species_traits) #> [1] \"data.frame\" dim(species_traits) #> [1] 149   7 head(species_traits) #>   species adult_body_mass gestation_length litter_size max_longevity #> 1  sp_001       461900.76           235.00        1.25         324.0 #> 2  sp_002           21.11            19.89        5.64          48.0 #> 3  sp_003              NA               NA          NA            NA #> 4  sp_004              NA               NA          NA            NA #> 5  sp_005           31.60            24.50        4.94          48.0 #> 6  sp_006           21.90            23.68        5.16          52.8 #>   sexual_maturity_age diet_breadth #> 1              668.20            1 #> 2               76.04           NA #> 3                  NA           NA #> 4                  NA           NA #> 5               43.27           NA #> 6               57.93            4"},{"path":"https://frbcesab.github.io/funbiogeo/news/index.html","id":"funbiogeo-0009000","dir":"Changelog","previous_headings":"","what":"funbiogeo 0.0.0.9000","title":"funbiogeo 0.0.0.9000","text":"Added NEWS.md file track changes package.","code":""}]
